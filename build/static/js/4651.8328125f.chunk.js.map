{"version":3,"file":"static/js/4651.8328125f.chunk.js","mappings":"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","sources":["Components/Composite/Common/SlotBook/BookSlotComposite.jsx","Components/UIBase/Common/CommonLoadingModal.jsx","Components/Composite/Common/SlotBook/BaySlotComposite.jsx","Components/Composite/Details/RoadSlotBookComposite.jsx","Components/Composite/Entity/RoadSummaryComposite.jsx","Components/UIBase/Common/CommonConfirmModal.jsx","Components/UIBase/Common/CommonMessageModal.jsx","JS/FunctionGroups.js","JS/KeyCodes.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../../ErrorBoundary\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../../CSS/styles.css\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport { Icon, Button } from \"@scuf/common\";\r\n\r\nclass BookSlotComposite extends Component {\r\n  state = {\r\n    timeSpan: \"\",\r\n    time: \"\",\r\n    isBooked: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      let startTime = this.props.slotTime.startLTTime.format(\"HH:mm\");\r\n      let timeSpan = startTime + \" - \" + this.props.slotTime.endLTTime.format(\"HH:mm\");\r\n\r\n      this.setState({\r\n        time: startTime,\r\n        timeSpan: timeSpan,\r\n        isBooked: this.props.slotTime.booked\r\n      });\r\n    } catch (error) {\r\n      console.log(\"BookSlotComposite:Error occurred on componentDidMount\", error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <div>\r\n              {this.state.isBooked ? \"\" : (\r\n                <div className=\"mobile-tobebook-slot-card\">\r\n                  <div className=\"mobile-slot-time-text\">\r\n                    <span>{this.state.time}</span>\r\n                  </div>\r\n                  {this.props.operationsVisibilty.add === false ? \"\" : (\r\n                    <div className=\"mobile-slot-button-div\">\r\n                      <Button type=\"primary\" size=\"small\" content={t(\"COMMON_BOOK_NOW\")} onClick={this.props.handleSlotBook}></Button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {this.state.isBooked ? (\r\n                <div className=\"mobile-booked-slot-card\">\r\n                  {this.props.isCanCancel === false ? \"\" : (\r\n                    <div className=\"mobile-cancel-slot-icon\" onClick={this.props.handleCancelBook}>\r\n                      <Icon root=\"common\" name=\"close\" size=\"small\" />\r\n                    </div>\r\n                  )}\r\n                  <div className=\"mobile-booked-slot-icon\">\r\n                    <Icon root=\"common\" name=\"badge-check\" size=\"large\" />\r\n                  </div>\r\n                  <div className=\"mobile-booked-slot-timespan\">\r\n                    <span>{this.state.timeSpan}</span>\r\n                  </div>\r\n                </div>\r\n              ) : \"\"}\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BookSlotComposite);\r\n\r\nBookSlotComposite.propTypes = {\r\n  locationCode: PropTypes.string,\r\n  slotList: PropTypes.array,\r\n  handleSlotBook: PropTypes.func,\r\n  handleCancelBook: PropTypes.func,\r\n};","import React from 'react';\r\nimport { Loader, Modal, Button } from '@scuf/common';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorBoundary from '../../ErrorBoundary';\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport \"../../../CSS/styles.css\"\r\n\r\nconst CommonLoadingModal = (props) => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div id=\"confirmModal\">\r\n            <Modal className=\"common-loading-modal\" open={props.isOpen} size=\"large\">\r\n              <Modal.Content>\r\n                <div style={{ textAlign: \"center\", fontSize: \"20px\", minHeight:\"100px\" }}>\r\n                  <Loader text={props.loadingMessage}></Loader>\r\n                </div>\r\n              </Modal.Content>\r\n            </Modal>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    </ErrorBoundary >\r\n  )\r\n}\r\n\r\nCommonLoadingModal.propTypes = {\r\n  loadingMessage: PropTypes.string,\r\n  isOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nCommonLoadingModal.defaultProps = {\r\n  isOpen: false\r\n}\r\n\r\nexport default CommonLoadingModal;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon, Tooltip } from \"@scuf/common\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../../ErrorBoundary\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../../CSS/styles.css\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../../JS/Utilities\";\r\nimport lodash from \"lodash\";\r\nimport dayjs from \"dayjs\";\r\nimport * as Constants from \"../../../../JS/Constants\";\r\nimport BookSlotComposite from \"./BookSlotComposite\";\r\nimport CommonMessageModal from \"../../../UIBase/Common/CommonMessageModal\";\r\nimport CommonConfirmModal from \"../../../UIBase/Common/CommonConfirmModal\";\r\nimport CommonLoadingModal from \"../../../UIBase/Common/CommonLoadingModal\";\r\n\r\nclass BaySlotComposite extends Component {\r\n  state = {\r\n    selectedSlot: {},\r\n\r\n    slots: [],\r\n    tempSlotInfo: {},\r\n    showCancelModal: false,\r\n    showUpdateModal: false,\r\n    isRefreshing: false,\r\n\r\n    showTipModal: false,\r\n    tipSuccess: false,\r\n    tipMessage: \"\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.generateSlots();\r\n    } catch (error) {\r\n      console.log(\"BaySlotComposite:Error occurred on componentDidUpdate\", error);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    try {\r\n      //scroll to the booked slot\r\n      let el = window.document.getElementById(this.props.locationCode + \"Div\");\r\n      if (el != null) {\r\n        let bookedSlot = this.props.slotTimeList.find(s => s.booked);\r\n        if (bookedSlot != null) {\r\n          let index = this.props.slotTimeList.filter(s => s.isVisible).indexOf(bookedSlot);\r\n          let postion = index * (100 + 2);\r\n          el.scrollLeft = postion;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"BaySlotComposite:Error occurred on componentDidUpdate\", error);\r\n    }\r\n  }\r\n\r\n  success(msg) {\r\n    this.showMessage(true, true, msg);\r\n  }\r\n\r\n  failed(msg) {\r\n    this.showMessage(true, false, msg);\r\n  }\r\n\r\n  showMessage(isShowTip, isSuccess, message) {\r\n    this.setState({\r\n      showTipModal: isShowTip,\r\n      tipSuccess: isSuccess,\r\n      tipMessage: message\r\n    });\r\n  }\r\n\r\n  getBookSlotParam(slotTime) {\r\n    let startTime = slotTime.startCurrentTime;\r\n    let endTime = slotTime.endCurrentTime;\r\n    let slotInfo = {\r\n      Remarks: \"Mobile Slot Booked\",\r\n      TransactionType: this.props.isShipment ? \"1\" : \"2\",\r\n      TransactionCode: this.props.transaction.Code,\r\n      Status: Constants.slotStatus.BOOKED,\r\n      StartTime: startTime,\r\n      EndTime: endTime,\r\n      LocationCode: this.props.locationCode,\r\n      ShareholderCode: this.props.transaction.ShareholderCode,\r\n      TerminalCode: this.props.selectedTerminal.Key.Code,\r\n      TransportationType: Constants.TransportationType.ROAD,\r\n      Attributes: []\r\n    };\r\n\r\n    return slotInfo;\r\n  }\r\n\r\n  getCancelBookParam(slotTime) {\r\n    let currentDate = new Date();\r\n    let currentTimeZone = currentDate.getTimezoneOffset() * -1;\r\n    let timeDifference = currentTimeZone - this.props.selectedTerminal.Key.TimeZone;\r\n    let startTime = dayjs(slotTime.startLTTime);\r\n    let endTime = dayjs(slotTime.endLTTime);\r\n\r\n    let slotInfo = {\r\n      Remarks: \"Mobile Slot Canceled\",\r\n      TransactionType: this.props.isShipment ? \"1\" : \"2\",\r\n      TransactionCode: this.props.transaction.Code,\r\n      Status: Constants.slotStatus.BOOKED,\r\n      StartTime: startTime.add(timeDifference, \"minute\").toDate(),\r\n      EndTime: endTime.add(timeDifference, \"minute\").toDate(),\r\n      LocationCode: this.props.locationCode,\r\n      ShareholderCode: this.props.transaction.ShareholderCode,\r\n      TerminalCode: this.props.selectedTerminal.Key.Code,\r\n      TransportationType: Constants.TransportationType.ROAD,\r\n      ReferenceNumber: this.props.transaction.ReferenceNumber,\r\n      Attributes: []\r\n    };\r\n\r\n    return slotInfo;\r\n  }\r\n\r\n  generateSlots() {\r\n    let slots = this.props.slotTimeList.map(s => {\r\n      if (s.isVisible) {\r\n        let isCanCancel = this.isCanCancelBook(s);\r\n        return <BookSlotComposite slotTime={s} isCanCancel={isCanCancel}\r\n          handleSlotBook={() => this.bookSlot(s)} handleCancelBook={() => this.cancelBook(s)}\r\n          operationsVisibilty={this.props.operationsVisibilty} terminalZone={this.props.selectedTerminal.Key.TimeZone}></BookSlotComposite>;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      slots: slots\r\n    });\r\n  }\r\n\r\n  isCanCancelBook(slotTime) {\r\n    if (this.props.operationsVisibilty.cancel === false) {\r\n      return false;\r\n    }\r\n    let slotParams = this.props.slotParameters;\r\n    let currentTime = dayjs();\r\n    let ltCurrentTime = currentTime.add(-1 * slotParams.timeDifference, \"minute\");\r\n    let minTimeForBook = ltCurrentTime.add(slotParams.minSlotMinutesToBook, \"minute\");\r\n    let startCurrentTime = dayjs(slotTime.startCurrentTime).add(-1 * slotParams.timeDifference, \"minutes\");\r\n    if (minTimeForBook.isBefore(startCurrentTime) === false) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  bookSlot(slotTime) {\r\n    if (this.props.transaction.SlotBooked) {\r\n      this.updateBookSlot(slotTime);\r\n    } else {\r\n      this.createBookSlot(slotTime);\r\n    }\r\n  }\r\n\r\n  createBookSlot(slotTime) {\r\n    try {\r\n      let tempSlotInfo = this.getBookSlotParam(slotTime);\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: 0,\r\n        KeyCodes: null,\r\n        Entity: tempSlotInfo,\r\n      };\r\n\r\n      axios(RestAPIs.BookSlot, Utilities.getAuthenticationObjectforPost(obj, this.props.tokenDetails.tokenInfo)).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.props.refreshSlotState(\"COMMON_BOOKING_SUCCESSFUL\", \"CREATE\", result.EntityResult);\r\n        } else {\r\n          this.failed(result.ErrorList[0]);\r\n          console.log(\"Error while Booking Slot:\", result);\r\n        }\r\n      }).catch((error) => {\r\n        this.failed(\"error\");\r\n        console.log(\"Error while Booking Slot:\", error);\r\n      });\r\n    } catch (error) {\r\n      this.failed(\"error\");\r\n      console.log(\"Error while Booking Slot\", error);\r\n    }\r\n  }\r\n\r\n  updateBookSlot(slotTime) {\r\n    try {\r\n      this.setState({\r\n        selectedSlot: slotTime,\r\n      }, () => this.showUpdateConfirmModal(true));\r\n    } catch (error) {\r\n      console.log(\"Error while Update Book Slot\", error);\r\n    }\r\n  }\r\n\r\n  confirmUpdateBook() {\r\n    try {\r\n      let slotTime = lodash.cloneDeep(this.state.selectedSlot);\r\n      let tempSlotInfo = this.getCancelBookParam(slotTime);\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: 0,\r\n        KeyCodes: null,\r\n        Entity: tempSlotInfo,\r\n      };\r\n\r\n      axios(RestAPIs.UpdateSlot, Utilities.getAuthenticationObjectforPost(obj, this.props.tokenDetails.tokenInfo)).then((response) => {\r\n        this.showUpdateConfirmModal(false);\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.props.refreshSlotState(\"COMMON_UPDATE_BOOKING_SUCCESSFUL\", \"UPDATE\", result.EntityResult);\r\n        } else {\r\n          this.failed(result.ErrorList[0]);\r\n          console.log(\"Error while Booking Slot:\", result);\r\n        }\r\n      }).catch((error) => {\r\n        this.failed(\"error\");\r\n        console.log(\"Error while Booking Slot:\", error);\r\n      });\r\n    } catch (error) {\r\n      this.failed(\"error\");\r\n      console.log(\"Error while Booking Slot\", error);\r\n    }\r\n  }\r\n\r\n  showUpdateConfirmModal(flag) {\r\n    this.setState({\r\n      showUpdateModal: flag\r\n    });\r\n  }\r\n\r\n  showCancelConfirmModal(flag) {\r\n    this.setState({\r\n      showCancelModal: flag\r\n    });\r\n  }\r\n\r\n  cancelBook(slotTime) {\r\n    try {\r\n      this.setState({\r\n        selectedSlot: slotTime\r\n      }, () => this.showCancelConfirmModal(true));\r\n    } catch (error) {\r\n      console.log(\"Error while Cancel Book Slot\", error);\r\n    }\r\n  }\r\n\r\n  confirmCancelBook() {\r\n    try {\r\n      let slotTime = lodash.cloneDeep(this.state.selectedSlot);\r\n      let tempSlotInfo = this.getCancelBookParam(slotTime);\r\n\r\n      let obj = {\r\n        ShareHolderCode: \"\",\r\n        keyDataCode: 0,\r\n        KeyCodes: null,\r\n        Entity: tempSlotInfo,\r\n      };\r\n\r\n      this.showCancelConfirmModal(false);\r\n      axios(RestAPIs.CancelSlot, Utilities.getAuthenticationObjectforPost(obj, this.props.tokenDetails.tokenInfo)).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          this.props.refreshSlotState(\"COMMON_CANCEL_BOOKING_SUCCESSFUL\", \"CANCEL\", result.EntityResult);\r\n        } else {\r\n          this.failed(result.ErrorList[0]);\r\n          console.log(\"Error while  Cancle Slot:\", result);\r\n        }\r\n      }).catch((error) => {\r\n        this.showCancelConfirmModal(false);\r\n        this.failed(\"error\");\r\n        console.log(\"Error while  Cancel Slot:\", error);\r\n      });\r\n    } catch (error) {\r\n      this.showCancelConfirmModal(false);\r\n      this.failed(\"error\");\r\n      console.log(\"Error while Cancel Slot\", error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    try {\r\n      let notSupportProducts = [];\r\n      this.props.productList.map(p => {\r\n        let tmpList = this.props.bayFPList.filter(bfp => bfp === p.FinishedProductCode);\r\n        if (tmpList.length === 0) {\r\n          notSupportProducts.push((\r\n            <div style={{ marginBottom: \"5px\", display: \"flex\" }}>\r\n              <div style={{ marginRight: \"10px\", fontSize: \"1.75rem\" }}>\r\n                <Icon root=\"common\" name=\"close\" size=\"small\" />\r\n              </div>\r\n              <div>\r\n                {p.FinishedProductCode}\r\n              </div>\r\n            </div>\r\n          ))\r\n        }\r\n      });\r\n\r\n      let slots = lodash.cloneDeep(this.state.slots);\r\n\r\n      let bayFPStr = this.props.bayFPList.map(fp => {\r\n        return fp + \" \"\r\n      });\r\n      bayFPStr = \"Support Products:\" + bayFPStr;\r\n\r\n      return (\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div>\r\n                <div className=\"slotBlocksDispaly\">\r\n                  <div>\r\n                    <div className=\"mobile-bay-card\">\r\n                      {notSupportProducts.length === 0 ?\r\n                        <div className=\"mobile-bay-fp-list\">\r\n                          <Tooltip\r\n                            content={bayFPStr}\r\n                            element={\r\n                              <span>\r\n                                {this.props.locationCode}\r\n                              </span>\r\n                            }\r\n                            position=\"top center\"\r\n                            event=\"focus\"\r\n                            hoverable={true}\r\n                          />\r\n                        </div>\r\n                        :\r\n                        <div className=\"mobile-horizontal-center\">\r\n                          <div className=\"mobile-bay-not-compatible-tooltip\">\r\n                            <span style={{ marginRight: \"5px\" }}>\r\n                              <Icon root=\"common\" name=\"badge-warning\" size=\"small\" />\r\n                            </span>\r\n                            <Tooltip\r\n                              content={bayFPStr}\r\n                              element={\r\n                                <span>\r\n                                  {this.props.locationCode}\r\n                                </span>\r\n                              }\r\n                              position=\"top center\"\r\n                              event=\"focus\"\r\n                              hoverable={true}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mobile-bay-not-compatible-fp\">\r\n                            {notSupportProducts}\r\n                          </div>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  <div id={this.props.locationCode + \"Div\"} className=\"slotBlocksDispaly mobile-slot\">\r\n                    {slots}\r\n                  </div>\r\n                </div>\r\n\r\n                <CommonLoadingModal isOpen={this.state.isRefreshing} loadingMessage=\"Loading\"></CommonLoadingModal>\r\n                <CommonConfirmModal isOpen={this.state.showCancelModal} confirmMessage=\"COMMON_CANCEL_CONFIRM\"\r\n                  handleNo={() => this.showCancelConfirmModal(false)} handleYes={() => this.confirmCancelBook()}></CommonConfirmModal>\r\n                <CommonMessageModal isSuccess={this.state.tipSuccess} isOpen={this.state.showTipModal} message={this.state.tipMessage}\r\n                  handleClose={() => { this.setState({ showTipModal: false }) }}></CommonMessageModal>\r\n\r\n                <CommonConfirmModal isOpen={this.state.showUpdateModal} confirmMessage=\"BOOKING_MODIFY_CONFIRM\"\r\n                  handleNo={() => this.showUpdateConfirmModal(false)} handleYes={() => this.confirmUpdateBook()}></CommonConfirmModal>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary >\r\n      );\r\n    }\r\n    catch (error) {\r\n      console.log(\"Error while render BaySlotComposite:\", error);\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BaySlotComposite);\r\n\r\nBaySlotComposite.propTypes = {\r\n  isShipment: PropTypes.bool.isRequired,\r\n  locationCode: PropTypes.string,\r\n  slotList: PropTypes.array,\r\n  refreshSlotState: PropTypes.func\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../CSS/styles.css\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { Select, Icon } from \"@scuf/common\";\r\nimport lodash from \"lodash\";\r\nimport moment from 'moment';\r\nimport BaySlotComposite from \"../Common/SlotBook/BaySlotComposite\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\nimport dayjs from \"dayjs\";\r\nimport CommonLoadingModal from \"../../UIBase/Common/CommonLoadingModal\";\r\nimport CommonMessageModal from \"../../UIBase/Common/CommonMessageModal\";\r\n\r\nclass RoadSlotBookComposite extends Component {\r\n  state = {\r\n    transaction: this.props.transaction,\r\n    terminalList: [],\r\n    bayList: [],\r\n    selectedTerminal: { Key: { Code: \"\" }, Value: [] },\r\n    selectedDate: dayjs(),\r\n    slotConfigurations: this.props.slotConfigutationList,\r\n    slotTimeList: [],\r\n    slotParameters: {\r\n      slotStartTime: dayjs(), //LocalTerminalTime\r\n      slotEndTime: dayjs(), //LocalTerminalTime\r\n      slotDuration: 30,\r\n      timeDifference: 0,\r\n      minSlotMinutesToBook: 30,\r\n      maxSlotDaysToBook: 7,\r\n      minSlotChangeMinutes: 90,\r\n      maxSlots: 1,\r\n      refreshTime: 5,\r\n      terminalCode: \"\"\r\n    },\r\n    baySlotList: [],\r\n    isRefreshing: false,\r\n    bookedSlotList: [],\r\n\r\n    showTipModal: false,\r\n    tipSuccess: false,\r\n    tipMessage: \"\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.getTerminalList();\r\n\r\n      this.refreshSlotState = this.refreshSlotState.bind(this);\r\n    } catch (error) {\r\n      console.log(\"RoadSlotBookComposite:Error occurred on componentDidMount\", error);\r\n    }\r\n  }\r\n\r\n  success(msg) {\r\n    this.showMessage(true, true, msg);\r\n  }\r\n\r\n  failed(msg) {\r\n    this.showMessage(true, false, msg);\r\n  }\r\n\r\n  showMessage(isShowTip, isSuccess, message) {\r\n    this.setState({\r\n      showTipModal: isShowTip,\r\n      tipSuccess: isSuccess,\r\n      tipMessage: message\r\n    });\r\n  }\r\n\r\n  getTerminalList() {\r\n    axios(RestAPIs.GetTerminalDetailsForFeature + \"0\", Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)).then((response) => {\r\n      let result = response.data;\r\n\r\n      if (result.IsSuccess === true) {\r\n        if (Array.isArray(result.EntityResult) && result.EntityResult.length > 0) {\r\n          let filterTerminalList = this.fiterTerminalList(result.EntityResult);\r\n\r\n          if (filterTerminalList.length > 0) {\r\n            let tmpSelectedTerminal = filterTerminalList.find(t => t.Key.Code === this.state.transaction.BookedTerminal);\r\n            if (tmpSelectedTerminal === null || tmpSelectedTerminal === undefined) {\r\n              tmpSelectedTerminal = filterTerminalList[0];\r\n            }\r\n\r\n            this.setDefaultSelectDate(tmpSelectedTerminal.Key.TimeZone);\r\n\r\n            this.setState({\r\n              terminalList: filterTerminalList,\r\n              selectedTerminal: tmpSelectedTerminal\r\n            }, () => {\r\n              this.handleTerminalChange(this.state.selectedTerminal.Key.Code);\r\n            });\r\n          } else {\r\n            this.failed(\"TerminalList_NotAvailable\");\r\n          }\r\n\r\n        } else {\r\n          console.log(\"Error while getting Terminal List:\", result);\r\n          this.failed(\"TerminalList_NotAvailable\");\r\n        }\r\n      } else {\r\n        console.log(\"Error while getting Terminal List:\", result);\r\n        this.failed(\"TerminalList_NotAvailable\");\r\n      }\r\n    }).catch((error) => {\r\n      this.failed(\"error\");\r\n      console.log(\"Error while getting Terminal List:\", error);\r\n    });\r\n  }\r\n\r\n  setDefaultSelectDate(timeZone) {\r\n    let selectedDate=dayjs();\r\n    if (this.props.isEditBook) {\r\n      selectedDate = this.state.transaction.StartTime;\r\n    }\r\n    let currentDate = new Date();\r\n    let currentTimeZone = currentDate.getTimezoneOffset() * -1;\r\n    let timeDifference = currentTimeZone - timeZone;\r\n    selectedDate = dayjs(selectedDate).add(-1 * timeDifference, \"minutes\").set(\"hour\", 0)\r\n      .set(\"minute\", 0)\r\n      .set(\"second\", 0)\r\n      .set(\"millisecond\", 0);\r\n    this.setState({\r\n      selectedDate: selectedDate\r\n    });\r\n  }\r\n\r\n  fiterTerminalList(terminalList) {\r\n    let newTerminalList = [];\r\n    let plannedTerminalList = this.state.transaction.PlannedTerminal.split(',');\r\n\r\n    terminalList.map(t => {\r\n      if (plannedTerminalList.indexOf(t.Key.Code) !== -1) {\r\n        newTerminalList.push(t);\r\n      }\r\n    });\r\n\r\n    return newTerminalList;\r\n  }\r\n\r\n  getBaysforTerminal() {\r\n    axios(RestAPIs.GetBaysOfUser + \"?TransportationType=\" + Constants.TransportationType.ROAD + \"&TerminalCode=\" + this.state.selectedTerminal.Key.Code,\r\n      Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)).then((response) => {\r\n        let result = response.data;\r\n        if (result.IsSuccess === true) {\r\n          if (Array.isArray(result.EntityResult) && result.EntityResult.length > 0) {\r\n            let resultList = this.props.isShipment ? result.EntityResult.filter(b => b.BayType === \"BOTH\" || b.BayType === \"LOADING\") :\r\n              result.EntityResult.filter(b => b.BayType === \"BOTH\" || b.BayType === \"UNLOADING\");\r\n            let bayList = [];\r\n            resultList.forEach((bay) => {\r\n              let bayItem = {\r\n                bayCode: bay.BayCode,\r\n                active: bay.Active,\r\n                bayType: bay.BayType,\r\n                shareholder: [],\r\n              };\r\n\r\n              if (Array.isArray(bay.SupportedProducts)) {\r\n                bay.SupportedProducts.forEach((product) => {\r\n                  if (product.Active) {\r\n                    let shareholderArray = bayItem.shareholder.filter(\r\n                      (sh) => sh.shCode === product.Shareholdercode\r\n                    );\r\n                    if (shareholderArray.length > 0) {\r\n                      shareholderArray[0].fpCodes.push(product.Code);\r\n                    } else {\r\n                      bayItem.shareholder.push({\r\n                        shCode: product.Shareholdercode,\r\n                        fpCodes: [product.Code],\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n              bayList.push(bayItem);\r\n            });\r\n\r\n            this.setState({\r\n              bayList\r\n            }, () => {\r\n              this.setSlotParam();\r\n            });\r\n          } else {\r\n            this.failed(\"BaySearch_NoResult\");\r\n            console.log(\"No Bays found:\", result);\r\n          }\r\n        } else {\r\n          this.failed(\"BaySearch_NoResult\");\r\n          console.log(\"Error while getting bays:\", result);\r\n        }\r\n      }).catch((error) => {\r\n        this.failed(\"BaySearch_NoResult\");\r\n        console.log(\"Error while getting getBaysforTerminal:\", error);\r\n      });\r\n  }\r\n\r\n  getTerminalDropdownOptions() {\r\n    let list = this.state.terminalList.map(function (a) {\r\n      return a.Key.Code;\r\n    });\r\n    return Utilities.transferListtoOptions(list);\r\n  }\r\n\r\n  handleTerminalChange = (terminalCode) => {\r\n    try {\r\n      let terminals = this.state.terminalList;\r\n      let filteredTerminals = terminals.filter(t => t.Key.Code === terminalCode);\r\n      if (filteredTerminals.length == 0) {\r\n        return;\r\n      }\r\n\r\n      let slotConfigurations = this.state.slotConfigurations;\r\n      let selectedSlotConfigurations = slotConfigurations.filter((sc) => sc.TerminalCode === terminalCode);\r\n      if (selectedSlotConfigurations.length > 0 && selectedSlotConfigurations[0].SlotParams.length > 0) {\r\n        this.setState({\r\n          selectedTerminal: filteredTerminals[0]\r\n        }, () => { this.getBaysforTerminal(); });\r\n      } else {\r\n        this.failed(\"SlotConfigurationsEmpty\");\r\n      }\r\n    } catch (error) {\r\n      this.failed(\"error\");\r\n      console.log(\"SlotBookComposite:Error occured on handleTerminalChange\", error);\r\n    }\r\n  }\r\n\r\n  handleDateChange = (duration) => {\r\n    try {\r\n      let selectedDate = this.state.selectedDate;\r\n      selectedDate = selectedDate.add(duration, \"day\");\r\n      this.setState({\r\n        selectedDate\r\n      }, () => {\r\n        this.setSlotParam();\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error in handleDateChanage\", error);\r\n    }\r\n  }\r\n\r\n  getBookedSlotList() {\r\n    let slotParams = this.state.slotParameters;\r\n    let slotRequestInfo = {\r\n      TerminalCode: slotParams.terminalCode,\r\n      TransportationType: Constants.TransportationType.ROAD,\r\n      TransactionSource: this.props.isShipment ? Constants.slotSource.SHIPMENT : Constants.slotSource.RECEIPT,\r\n      FromDate: slotParams.slotStartTime.add(slotParams.timeDifference, \"minute\").toDate(),\r\n      ToDate: slotParams.slotEndTime.add(slotParams.timeDifference, \"minute\").toDate(),\r\n    };\r\n\r\n    axios(RestAPIs.GetSlotsList, Utilities.getAuthenticationObjectforPost(slotRequestInfo, this.props.tokenDetails.tokenInfo)).then((response) => {\r\n      let result = response.data;\r\n      let tmpBookedSlotList = [];\r\n      if (result.IsSuccess === true) {\r\n        if (Array.isArray(result.EntityResult)) {\r\n          tmpBookedSlotList = result.EntityResult;\r\n        }\r\n      } else {\r\n        this.failed(result.ErrorList[0]);\r\n      }\r\n\r\n      this.setState({\r\n        bookedSlotList: tmpBookedSlotList\r\n      }, () => {\r\n        this.setBaySlotList();\r\n      });\r\n    }).catch((error) => {\r\n      this.setState({\r\n        bookedSlotList: []\r\n      }, () => {\r\n        this.setBaySlotList();\r\n      });\r\n      this.failed(error);\r\n    });\r\n  }\r\n\r\n  isSelectedDateOutofRange(selectedDate) {\r\n    let slotParams = this.state.slotParameters;\r\n    if (slotParams === null || slotParams.timeDifference <= 0) {\r\n      return true;\r\n    }\r\n\r\n    let currentTime = dayjs();\r\n    let ltCurrentTime = currentTime.add(-1 * slotParams.timeDifference, \"minute\");\r\n    // let minTimeForBook = currentTime.add(slotParams.minSlotMinutesToBook,\"minute\");\r\n    return selectedDate.diff(ltCurrentTime, \"day\") < 0 || selectedDate.diff(ltCurrentTime, \"day\") >= slotParams.maxSlotDaysToBook;\r\n  }\r\n\r\n  isProductCompatibleWithBay(bayFPList) {\r\n    let fpList = this.props.productList;\r\n    if (fpList.length === 0 || bayFPList.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    //Make sure Bay products contains at least one shipment Products\r\n    for (let i = 0; i < fpList.length; i++) {\r\n      if (bayFPList.filter(p => p === fpList[i].FinishedProductCode).length !== 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getBaySupportProductList(bay, shareholder) {\r\n    let baySHList = bay.shareholder.filter(s => s.shCode === shareholder);\r\n    if (baySHList.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return baySHList[0].fpCodes;\r\n  }\r\n\r\n  setSlotParam() {\r\n    let terminalTimeZone = this.state.selectedTerminal.Key.TimeZone;\r\n    let selectedConfig = this.state.slotConfigurations.filter(\r\n      (sc) => sc.TerminalCode === this.state.selectedTerminal.Key.Code\r\n    );\r\n\r\n    if (selectedConfig.length === 0) {\r\n      this.failed(\"SlotConfigurationsEmpty\");\r\n      return;\r\n    }\r\n\r\n    let currentDate = new Date();\r\n    let currentTimeZone = currentDate.getTimezoneOffset() * -1;\r\n    let timeDifference = currentTimeZone - terminalTimeZone;\r\n    let slotStartTime = this.state.selectedDate;\r\n    let slotEndTime = this.state.selectedDate;\r\n    let startTime = \"00:00\";\r\n    let endTime = \"23:59\";\r\n    let slotDuration = \"30\";\r\n    let maxNoOfSlots = 1;\r\n    let minSlotMinutesToBook = 30;\r\n    let maxSlotDaysToBook = 7;\r\n    let minSlotChangeMinutes = 90;\r\n    let refreshTime = 5;\r\n\r\n    let operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"SlotStartTime\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      startTime = operationalParams[0].Value;\r\n    }\r\n    operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"SlotEndTime\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      endTime = operationalParams[0].Value;\r\n    }\r\n    operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"SlotDuration\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      slotDuration = operationalParams[0].Value;\r\n    }\r\n    operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"MaxNoOfSlots\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      maxNoOfSlots = operationalParams[0].Value;\r\n    }\r\n    operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"AdvanceSlotBookMaxDays\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      maxSlotDaysToBook = operationalParams[0].Value;\r\n    }\r\n    operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"BookAdvSlotMinutes\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      minSlotMinutesToBook = operationalParams[0].Value;\r\n    }\r\n    operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"ChangeAdvSlotMinutes\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      minSlotChangeMinutes = operationalParams[0].Value;\r\n    }\r\n    operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"RefreshInterval\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      refreshTime = operationalParams[0].Value;\r\n    }\r\n\r\n\r\n    slotStartTime = slotStartTime.set(\"hour\", startTime.split(\":\")[0]).set(\"minute\", startTime.split(\":\")[1]);\r\n    slotEndTime = slotEndTime.set(\"hour\", endTime.split(\":\")[0]).set(\"minute\", endTime.split(\":\")[1]);\r\n\r\n    if (slotStartTime.diff(slotEndTime, \"minute\") >= 0) {\r\n      slotEndTime = slotEndTime.add(1, \"day\");\r\n    }\r\n\r\n    let tempSlotStartTime = lodash.cloneDeep(slotStartTime);\r\n    let tmpSlNo = 1;\r\n\r\n    let slotTimeList = [];\r\n    while (tempSlotStartTime < slotEndTime) {\r\n      let tempSlotEndTime = tempSlotStartTime.add(slotDuration, \"minute\");\r\n      slotTimeList.push({\r\n        slNo: tmpSlNo,\r\n        startLTTime: tempSlotStartTime,\r\n        startCurrentTime: tempSlotStartTime.add(timeDifference, \"minute\"),\r\n        endLTTime: tempSlotEndTime,\r\n        endCurrentTime: tempSlotEndTime.add(timeDifference, \"minute\"),\r\n        booked: false,\r\n        isVisible: true\r\n      });\r\n\r\n      tempSlotStartTime = tempSlotEndTime;\r\n      tmpSlNo += 1;\r\n    }\r\n\r\n    let slotParameters = {\r\n      slotStartTime: slotStartTime,\r\n      slotEndTime: slotEndTime,\r\n      slotDuration: slotDuration,\r\n      timeDifference: timeDifference,\r\n      terminalCode: this.state.selectedTerminal.Key.Code,\r\n      maxSlots: maxNoOfSlots,\r\n      minSlotChangeMinutes: minSlotChangeMinutes,\r\n      minSlotMinutesToBook: minSlotMinutesToBook,\r\n      maxSlotDaysToBook: maxSlotDaysToBook,\r\n      refreshTime: refreshTime,\r\n    };\r\n\r\n    this.setState({\r\n      slotTimeList,\r\n      slotParameters,\r\n    }, () => {\r\n      this.getBookedSlotList();\r\n    });\r\n  }\r\n\r\n  handleSlotTimeList(bay) {\r\n    let slotTimeList = lodash.cloneDeep(this.state.slotTimeList);\r\n    if (bay.bayCode !== this.state.transaction.BookedBay) {\r\n      return slotTimeList;\r\n    }\r\n\r\n    let slotParams = lodash.cloneDeep(this.state.slotParameters);\r\n    let startTime = this.state.transaction.StartTime;\r\n    let endTime = this.state.transaction.EndTime;\r\n    let bookedStartTime = dayjs(startTime).add(-1 * slotParams.timeDifference, \"minutes\");\r\n    let bookedEndTime = dayjs(endTime).add(-1 * slotParams.timeDifference, \"minutes\");\r\n    if (this.state.selectedDate.diff(bookedStartTime, \"day\") != 0) {\r\n      return slotTimeList;\r\n    }\r\n\r\n    if (this.state.transaction.SlotBooked === false) {\r\n      return slotTimeList;\r\n    }\r\n\r\n    if (this.state.transaction.BookedTerminal !== this.state.selectedTerminal.Key.Code) {\r\n      return slotTimeList;\r\n    }\r\n\r\n    slotTimeList.forEach(s => {\r\n      let tmpStartTime = dayjs(s.startLTTime);\r\n      let tmpEndTime = dayjs(s.endLTTime);\r\n      if (tmpStartTime >= bookedStartTime && tmpEndTime <= bookedEndTime) {\r\n        s.booked = true;\r\n      }\r\n    });\r\n\r\n    //if has more than 1 booked slots, then display those slots together\r\n    let tmpContinuousSlots = slotTimeList.filter(s => s.booked);\r\n    if (tmpContinuousSlots.length <= 1) {\r\n      return slotTimeList;\r\n    }\r\n\r\n    let tmpStartSlot = tmpContinuousSlots[0];\r\n    let tmpEndSlot = tmpContinuousSlots[tmpContinuousSlots.length - 1];\r\n    tmpStartSlot.endCurrentTime = tmpEndSlot.endCurrentTime;\r\n    tmpStartSlot.endLTTime = tmpEndSlot.endLTTime;\r\n\r\n    slotTimeList = slotTimeList.filter(s => s.booked === false);\r\n    slotTimeList.push(tmpStartSlot);\r\n    slotTimeList.sort((s1, s2) => { return s1.slNo >= s2.slNo ? 1 : -1 });\r\n\r\n    return slotTimeList;\r\n  }\r\n\r\n  setBaySlotList() {\r\n    try {\r\n      let fpList = this.props.productList;\r\n      let shareholder = fpList.length === 0 ? \"\" : fpList[0].ShareholderCode;\r\n\r\n      let baySlotList = [];\r\n      this.state.bayList.forEach(b => {\r\n        let bayFPList = this.getBaySupportProductList(b, shareholder);\r\n        let isCompatible = this.isProductCompatibleWithBay(bayFPList);\r\n\r\n        if (isCompatible) {\r\n          let slotTimeList = this.handleSlotTimeList(b);\r\n          slotTimeList.forEach(s => {\r\n            s.isVisible = this.isSlotVisible(b,s, isCompatible);\r\n          });\r\n\r\n          if (slotTimeList.filter(s => s.isVisible).length !== 0) {\r\n            baySlotList.push((\r\n              <div style={{ marginBottom: \"16px\", height: \"100px\" }} className=\"mobile-bay-slot-div-content\">\r\n                <BaySlotComposite isShipment={this.props.isShipment} slotTimeList={slotTimeList} locationCode={b.bayCode} isBayCompatible={isCompatible}\r\n                  productList={fpList} bayFPList={bayFPList} isEditBook={this.props.isEditBook} transaction={this.state.transaction}\r\n                  selectedDate={this.state.selectedDate} selectedTerminal={this.state.selectedTerminal} operationsVisibilty={this.props.operationsVisibilty}\r\n                  slotParameters={this.state.slotParameters} refreshSlotState={this.refreshSlotState}></BaySlotComposite>\r\n              </div>\r\n            ));\r\n          }\r\n        }\r\n      });\r\n\r\n      this.setState({\r\n        baySlotList: baySlotList\r\n      });\r\n    } catch (error) {\r\n      console.log(\"RoadSlotBookComposite::setBaySlotList:\" + error);\r\n    }\r\n  }\r\n\r\n  isSlotVisible(bayInfo,slotTime, isBayCompatible) {\r\n    if (slotTime.booked) {\r\n      return true;\r\n    }\r\n\r\n    if (!isBayCompatible) {\r\n      return false;\r\n    }\r\n\r\n    if (this.props.operationsVisibilty.add === false) {\r\n      return false;\r\n    }\r\n    let slotParams = lodash.cloneDeep(this.state.slotParameters);\r\n    let currentTime = dayjs();\r\n    let ltCurrentTime = currentTime.add(-1 * slotParams.timeDifference, \"minute\");\r\n    let minTimeForBook = ltCurrentTime.add(slotParams.minSlotMinutesToBook, \"minute\");\r\n    //booked and past time\r\n    let bookedStartTime = dayjs(this.state.transaction.StartTime).add(-1 * slotParams.timeDifference, \"minutes\");\r\n    if (this.state.transaction.SlotBooked ===true && minTimeForBook.isBefore(bookedStartTime) === false) {\r\n      return false;\r\n    }\r\n    if (minTimeForBook.isBefore(slotTime.startLTTime) === false) {\r\n      return false;\r\n    }\r\n\r\n    if (this.state.selectedDate.diff(ltCurrentTime, \"day\") >= slotParams.maxSlotDaysToBook) {\r\n      return false;\r\n    }\r\n\r\n    //if current slot is alreay been booked, then it's invisible\r\n    let bookedSlotList = lodash.cloneDeep(this.state.bookedSlotList);\r\n    if (bookedSlotList.length === 0) {\r\n      return true;\r\n    }\r\n\r\n\r\n    bookedSlotList = bookedSlotList.filter(s => s.TerminalCode === this.state.selectedTerminal.Key.Code && s.TransactionCode !== this.state.transaction.Code\r\n      && s.TransportationType + \"\" === Constants.TransportationType.ROAD && s.LocationCode === bayInfo.bayCode);\r\n\r\n    if (bookedSlotList.length === 0) {\r\n      return true;\r\n    }\r\n    bookedSlotList.forEach(s => {\r\n      s.StartTime = dayjs(s.StartTime).add(-1 * slotParams.timeDifference, \"minute\");\r\n      s.EndTime = dayjs(s.EndTime).add(-1 * slotParams.timeDifference, \"minute\");\r\n    });\r\n    if (bookedSlotList.filter(b => b.StartTime <= slotTime.startLTTime && b.EndTime >= slotTime.endLTTime).length !== 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  refreshSlotState(message, actionType, result) {\r\n    let transaction = lodash.cloneDeep(this.state.transaction);\r\n\r\n    if (actionType === \"CREATE\" || actionType === \"UPDATE\") {\r\n      transaction.ReferenceNumber = result.ReferenceNumber;\r\n      transaction.StartTime = result.StartTime;\r\n      transaction.EndTime = result.EndTime;\r\n      transaction.BookedTerminal = result.TerminalCode;\r\n      transaction.BookedBay = result.LocationCode;\r\n      transaction.SlotBooked = true;\r\n    } else if (actionType === \"CANCEL\") {\r\n      transaction.ReferenceNumber = \"\";\r\n      transaction.StartTime = \"\";\r\n      transaction.EndTime = \"\";\r\n      transaction.BookedTerminal = \"\";\r\n      transaction.BookedBay = \"\";\r\n      transaction.SlotBooked = false;\r\n    }\r\n\r\n    this.setState({\r\n      transaction: transaction\r\n    }, () => {\r\n      this.getBookedSlotList();\r\n      this.success(message);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    try {\r\n      let terminalOptions = this.getTerminalDropdownOptions();\r\n      let baySlotList = lodash.cloneDeep(this.state.baySlotList);\r\n\r\n      return (\r\n        <ErrorBoundary>\r\n          <TranslationConsumer>\r\n            {(t) => (\r\n              <div>\r\n                <div className=\"ui breadcrumb pl-1 mobile-bread-crumb mobile-align-items-start\">\r\n                  <div className=\"section mt-sm-2 mt-lg-0\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={this.props.handleBackClick}>\r\n                    <Icon root=\"common\" name=\"caret-left\" className=\"caretLeft\"></Icon>\r\n                  </div>\r\n                  <div className=\"section pl-1 mt-sm-2 mt-lg-0\">\r\n                    <span>\r\n                      {this.props.isShipment ? t(\"TruckShipment\") + \" - \" + this.props.transaction.Code : t(\"TruckReceipt\") + \" - \" + this.props.transaction.Code}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div id=\"terminal\">\r\n                  <div className=\"mobile-terminal-select\">\r\n                    <span>{t(\"Common_Terminal\")}</span>\r\n                    <Select className=\"mobile-select\"\r\n                      placeholder={t(\"Common_Terminal\")}\r\n                      value={this.state.selectedTerminal.Key.Code}\r\n                      options={terminalOptions}\r\n                      fluid={true}\r\n                      onChange={(value) => this.handleTerminalChange(value)}\r\n                      disabled={this.state.transaction.SlotBooked}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div id=\"Date\" className=\"mobile-date-selector\">\r\n                  <div className=\"slotBlocksDispaly\" style={{ justifyContent: \"center\" }}>\r\n                    <div>\r\n                      <Icon\r\n                        onClick={() => this.handleDateChange(-1)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-left\"\r\n                        exactSize={24}\r\n                      ></Icon>\r\n                    </div>\r\n                    <div className=\"mobile-slot-date-span\">\r\n                      <span>{this.state.selectedDate.format(\"DD MMM YYYY\")}</span>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Icon\r\n                        onClick={() => this.handleDateChange(1)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                        root=\"common\"\r\n                        name=\"caret-right\"\r\n                        exactSize={24}\r\n                      ></Icon>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {baySlotList.length !== 0 ? (\r\n                  <div id=\"content\" className=\"mobile-bay-slot-div\">\r\n                    {baySlotList}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"col-12 col-md-12 col-lg-12\" style={{ textAlign: \"center\" }}>\r\n                    {t(\"MarineDashboard_NoDataAvailable\")}\r\n                  </div>\r\n                )}\r\n\r\n                <CommonLoadingModal isOpen={this.state.isRefreshing} loadingMessage=\"Loading\"></CommonLoadingModal>\r\n                <CommonMessageModal isSuccess={this.state.tipSuccess} isOpen={this.state.showTipModal} message={this.state.tipMessage}\r\n                  handleClose={() => { this.setState({ showTipModal: false }) }}></CommonMessageModal>\r\n              </div>\r\n            )}\r\n          </TranslationConsumer>\r\n        </ErrorBoundary >\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Error while render RoadSlotBookComposite:\", error);\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RoadSlotBookComposite);\r\n\r\nRoadSlotBookComposite.propTypes = {\r\n  isShipment: PropTypes.bool.isRequired,\r\n  transaction: PropTypes.object,\r\n  handleBackClick: PropTypes.func,\r\n  productList: PropTypes.array,\r\n  operationsVisibilty: PropTypes.object.isRequired\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ErrorBoundary from \"../../ErrorBoundary\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../CSS/styles.css\";\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport axios from \"axios\";\r\nimport * as RestAPIs from \"../../../JS/RestApis\";\r\nimport * as Utilities from \"../../../JS/Utilities\";\r\nimport { functionGroups, fnSlotInformation } from \"../../../JS/FunctionGroups\";\r\nimport { Input, Icon, Button, Modal, Grid } from \"@scuf/common\";\r\nimport { DataTable } from \"@scuf/datatable\";\r\nimport * as KeyCodes from \"../../../JS/KeyCodes\";\r\nimport lodash from \"lodash\";\r\nimport moment from 'moment';\r\nimport dayjs from 'dayjs';\r\nimport RoadSlotBookComposite from \"../Details/RoadSlotBookComposite\";\r\nimport CommonConfirmModal from \"../../UIBase/Common/CommonConfirmModal\";\r\nimport CommonMessageModal from \"../../UIBase/Common/CommonMessageModal\";\r\nimport * as Constants from \"../../../JS/Constants\";\r\n\r\nclass RoadSummaryComposite extends Component {\r\n  state = {\r\n    transactionList: [],\r\n    allTransactionList: [],\r\n    compartmentList: [],\r\n    expandedRows: [],\r\n    bookedTransactionList: [],\r\n    driverBayQueueInfo: null,\r\n    isSlotBooking: false,\r\n    isEditBook: false,\r\n    bookingTransaction: null,\r\n    bookingFPList: [],\r\n    modifyModalOpen: false,\r\n    filterKeyword: \"\",\r\n    slotConfigurations: [],\r\n    operationsVisibilty: {\r\n      add: false,\r\n      modify: false,\r\n      cancel: false\r\n    },\r\n\r\n    showTipModal: false,\r\n    tipSuccess: false,\r\n    tipMessage: \"\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.terminalRender = this.terminalRender.bind(this);\r\n    this.toggleExpand = this.toggleExpand.bind(this);\r\n    this.rowExpansionTemplate = this.rowExpansionTemplate.bind(this);\r\n    this.editRender = this.editRender.bind(this);\r\n    this.filterTransaction = this.filterTransaction.bind(this);\r\n    this.dateRender = this.dateRender.bind(this);\r\n    this.slotRender = this.slotRender.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.initAccessLevel();\r\n      this.getTransactionList();\r\n      this.getBayQueueInfoForUser();\r\n      this.startBayQueueInfoTimer();\r\n    } catch (error) {\r\n      console.log(\"RoadSummaryComposite:Error occurred on componentDidMount\", error);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stopBayQueueInfoTimer();\r\n  }\r\n\r\n  success(msg) {\r\n    this.showMessage(true, true, msg);\r\n  }\r\n\r\n  failed(msg) {\r\n    this.showMessage(true, false, msg);\r\n  }\r\n\r\n  showMessage(isShowTip, isSuccess, message) {\r\n    this.setState({\r\n      showTipModal: isShowTip,\r\n      tipSuccess: isSuccess,\r\n      tipMessage: message\r\n    });\r\n  }\r\n\r\n  initAccessLevel() {\r\n    let operationsVisibilty = lodash.cloneDeep(this.state.operationsVisibilty);\r\n    operationsVisibilty.add = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.add,\r\n      fnSlotInformation\r\n    );\r\n    operationsVisibilty.modify = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.modify,\r\n      fnSlotInformation\r\n    );\r\n    operationsVisibilty.cancel = Utilities.isInFunction(\r\n      this.props.userDetails.EntityResult.FunctionsList,\r\n      functionGroups.remove,\r\n      fnSlotInformation\r\n    );\r\n\r\n    this.setState({ operationsVisibilty });\r\n  }\r\n\r\n  getTransactionList() {\r\n    let json = {\r\n      TransactionType: this.props.isShipment ? 0 : 1\r\n    };\r\n\r\n    axios(RestAPIs.GetPendingTransaction, Utilities.getAuthenticationObjectforPost(json, this.props.tokenDetails.tokenInfo)).then((response) => {\r\n      let result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        let transList = this.handleTransactionList(result.EntityResult);\r\n        this.setState({\r\n          transactionList: transList,\r\n          allTransactionList: transList,\r\n          bookedTransactionList: transList.filter(t => t.SlotBooked)\r\n        }, () => {\r\n          this.filterTransaction(this.state.filterKeyword);\r\n          this.getSlotConfigurations();\r\n        });\r\n\r\n      } else {\r\n        this.setState({ transactionList: [], allTransactionList: [], bookedTransactionList: [] });\r\n        this.failed(result.ErrorList[0]);\r\n        console.log(\"Failed in RoadSummaryComposite getTransactionList:\", result.ErrorList);\r\n      }\r\n    }).catch((error) => {\r\n      this.failed(\"error\");\r\n      console.log(\"Error in RoadSummaryComposite getTransactionList:\", error);\r\n    });\r\n  }\r\n\r\n  startBayQueueInfoTimer() {\r\n    let time = parseInt(this.props.bayQueueInfoRefreshInterval);\r\n    this.bayQueueInfoTimer = setInterval(() => {\r\n      this.getBayQueueInfoForUser();\r\n    }, time * 1000);\r\n  }\r\n\r\n  stopBayQueueInfoTimer() {\r\n    if (this.bayQueueInfoTimer != null) {\r\n      clearInterval(this.bayQueueInfoTimer);\r\n      this.bayQueueInfoTimer = null;\r\n    }\r\n  }\r\n\r\n  getBayQueueInfoForUser() {\r\n    let json = {\r\n      TransactionType: this.props.isShipment ? 0 : 1\r\n    };\r\n    axios(RestAPIs.GetBayQueueInfoForUser, Utilities.getAuthenticationObjectforPost(json, this.props.tokenDetails.tokenInfo)).then((response) => {\r\n      let result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (Array.isArray(result.EntityResult.Table) && result.EntityResult.Table.length > 0) {\r\n          this.setState({ driverBayQueueInfo: result.EntityResult.Table[0] });\r\n        }\r\n      } else {\r\n        this.setState({ driverBayQueueInfo: null });\r\n        this.failed(result.ErrorList[0]);\r\n        console.log(\"Failed in RoadSummaryComposite getBayQueueInfoForDriver:\", result.ErrorList);\r\n      }\r\n    }).catch((error) => {\r\n      this.setState({ driverBayQueueInfo: null });\r\n      this.failed(\"error\");\r\n      console.log(\"Error in RoadSummaryComposite getBayQueueInfoForDriver:\", error);\r\n    });\r\n  }\r\n\r\n  handleTransactionList(transList) {\r\n    //If Slot booked, then use booked terminal as terminal, or use all associated terminals\r\n    let newTransList = [];\r\n    transList.forEach(t => {\r\n      if (t.SlotBooked) {\r\n        t.TerminalCode = t.BookedTerminal;\r\n      } else {\r\n        t.TerminalCode = t.PlannedTerminal;\r\n      }\r\n\r\n      let newTrans = lodash.cloneDeep(t);\r\n      newTransList.push(newTrans);\r\n    });\r\n\r\n    return newTransList;\r\n  }\r\n\r\n  packCompartmentParam(transaction) {\r\n    let keyCode = [\r\n      {\r\n        key: this.props.isShipment ? KeyCodes.shipmentCode : KeyCodes.receiptCode,\r\n        value: transaction.Code,\r\n      },\r\n    ];\r\n\r\n    let obj = {\r\n      ShareHolderCode: transaction.ShareholderCode,\r\n      keyDataCode: this.props.isShipment ? KeyCodes.shipmentCode : KeyCodes.receiptCode,\r\n      KeyCodes: keyCode,\r\n    };\r\n\r\n    return obj;\r\n  }\r\n\r\n  getCompartmentsInfo(transaction) {\r\n    let compartList = lodash.cloneDeep(this.state.compartmentList);\r\n\r\n    let existCompList = this.props.isShipment ? compartList.filter(c => c.ShipmentCode === transaction.Code)\r\n      : compartList.filter(c => c.ReceiptCode === transaction.Code);\r\n\r\n    if (existCompList.length !== 0) {\r\n      return;\r\n    }\r\n\r\n    this.getTransactionDetail(transaction, result => {\r\n      if (this.props.isShipment) {\r\n        result.EntityResult.ShipmentDetailsInfo.map(item => {\r\n          compartList.push(item);\r\n        });\r\n      } else {\r\n        result.EntityResult.ReceiptCompartmentsInfo.map(item => {\r\n          compartList.push(item);\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        compartmentList: compartList\r\n      });\r\n    });\r\n  }\r\n\r\n  terminalRender(data) {\r\n    if (data.rowData.SlotBooked) {\r\n      const open = this.state.expandedRows.includes(data.rowData);\r\n      return <div className=\"terminal-icon\" onClick={() => { this.toggleExpand(data.rowData, open) }}>\r\n        <Icon root=\"common\" name={open ? 'caret-up' : 'caret-down'} />\r\n      </div>;\r\n    } else {\r\n      return <div className=\"terminal-text\">{data.rowData.TerminalCode}</div>\r\n    }\r\n  }\r\n\r\n  rowExpansionTemplate(data, terminalTitle) {\r\n    try {\r\n      let compartmentData = this.props.isShipment ? this.state.compartmentList.filter(c => c.ShipmentCode === data.Code)\r\n        : this.state.compartmentList.filter(c => c.ReceiptCode === data.Code);\r\n\r\n      return <ErrorBoundary>\r\n        <div>\r\n          <div className=\"mobile-pending-transaction-div-terminal\">\r\n            {terminalTitle + \": \" + data.BookedTerminal}\r\n          </div>\r\n          <div className=\"mobile-pending-transaction-tr-datatable mobile-large-font-datable mobile-pending-transaction-product\">\r\n            <DataTable showHeader={false} data={compartmentData} selectionMode=\"single\">\r\n              <DataTable.Column field=\"FinishedProductCode\" />\r\n              <DataTable.Column className=\"text-align-center\" />\r\n              <DataTable.Column renderer={this.quantityRender} />\r\n              <DataTable.Column renderer={p => this.editRender(p, data)} />\r\n            </DataTable>\r\n          </div>\r\n        </div>\r\n      </ErrorBoundary >\r\n    } catch (error) {\r\n      console.log(\"Error while rowExpansionTemplate:\", error, data.Code);\r\n    }\r\n  }\r\n\r\n  toggleExpand(data, open) {\r\n    try {\r\n      let expanded = this.state.expandedRows;\r\n      let bookedList = lodash.cloneDeep(this.state.bookedTransactionList);\r\n\r\n      if (open) {\r\n        let index = expanded.findIndex((item) => JSON.stringify(item) === JSON.stringify(data));\r\n        expanded.splice(index, 1);\r\n        bookedList.push(data);\r\n      } else {\r\n        expanded.push(data);\r\n        bookedList = bookedList.filter(b => b.Code !== data.Code);\r\n        this.getCompartmentsInfo(data);\r\n      }\r\n\r\n      this.setState({ expandedRows: expanded, bookedTransactionList: bookedList }, () => {\r\n        let nodeList = document.getElementById(\"transactionTable\").querySelector(\"table\").querySelectorAll(\"tr.p-datatable-row\");\r\n\r\n        [].forEach.call(nodeList, function (el) {\r\n          let html = el.innerHTML;\r\n          if (html.indexOf(data.Code) !== -1) {\r\n            if (open) {\r\n              el.classList.remove(\"mobile-expanded-tr\");\r\n            } else {\r\n              el.classList.add(\"mobile-expanded-tr\");\r\n            }\r\n          }\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error in toggleExpand:\", error, data.Code);\r\n    }\r\n  }\r\n\r\n  editRender(data, transaction) {\r\n    try {\r\n      if (this.state.operationsVisibilty.modify === false) {\r\n        return \"\";\r\n      }\r\n\r\n      let compList = lodash.cloneDeep(this.state.compartmentList);\r\n      compList = this.props.isShipment ? compList.filter(c => c.ShipmentCode === data.rowData.ShipmentCode) : compList.filter(c => c.ReceiptCode === data.rowData.ReceiptCode);\r\n      if (data.rowData.CompartmentCode === compList[compList.length - 1].CompartmentCode) {\r\n        //validate book condition\r\n        let isPastTime = this.isPastTimeForBookSlot(transaction);\r\n        return <div className=\"terminal-icon\" onClick={() => this.confirmEditBooking(data.rowData, isPastTime)}>\r\n          {\r\n            isPastTime ? <span className=\"icon-BookInfo-view\" size=\"small\"></span> : <Icon root=\"common\" name=\"edit\" size=\"small\" />\r\n          }\r\n        </div>;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in RoadSummaryComposite editRender\", error);\r\n    }\r\n  }\r\n\r\n  getSlotConfigurations() {\r\n    axios(RestAPIs.GetSlotConfigurations + Constants.TransportationType.ROAD, Utilities.getAuthenticationObjectforGet(this.props.tokenDetails.tokenInfo)).then((response) => {\r\n      let result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        if (Array.isArray(result.EntityResult) && result.EntityResult.length > 0) {\r\n          this.setState({\r\n            slotConfigurations: result.EntityResult,\r\n          });\r\n        } else {\r\n          console.log(\"Error while getting getSlotConfigurations:\", result);\r\n        }\r\n      } else {\r\n        console.log(\"Error while getting getSlotConfigurations:\", result);\r\n      }\r\n    }).catch((error) => {\r\n      console.log(\"Error while getting getSlotConfigurations:\", error);\r\n    });\r\n  }\r\n\r\n  isPastTimeForBookSlot(data) {\r\n    let selectedConfig = this.state.slotConfigurations.filter(\r\n      (sc) => sc.TerminalCode === data.BookedTerminal\r\n    );\r\n    if (selectedConfig.length == 0) {\r\n      return false;\r\n    }\r\n    let operationalParams = selectedConfig[0].SlotParams.filter(\r\n      (sp) => sp.Name === \"BookAdvSlotMinutes\"\r\n    );\r\n    if (operationalParams.length > 0) {\r\n      let minSlotMinutesToBook = operationalParams[0].Value;\r\n      let currentTime = new Date();\r\n      let currentTimeZone = currentTime.getTimezoneOffset() * -1;\r\n      let timeDifference = currentTimeZone - data.TimeZone;\r\n      let startTime = dayjs(data.StartTime).add(-1 * timeDifference, \"minute\");\r\n      let ltCurrentTime =  dayjs(currentTime).add(-1 * timeDifference, \"minute\");\r\n      let minTimeForBook = dayjs(ltCurrentTime).add(minSlotMinutesToBook, \"minute\");\r\n      //booked and past time\r\n      if (minTimeForBook.isBefore(startTime) === false) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  quantityRender(data) {\r\n    return data.rowData.Quantity + \" \" + data.rowData.QuantityUOM;\r\n  }\r\n\r\n  slotRender(data, btnContent) {\r\n    if (!data.rowData.SlotBooked) {\r\n      if (this.state.operationsVisibilty.add === false) {\r\n        return \"\";\r\n      } else {\r\n        return <Button className=\"border-radius-20\" type=\"primary\" size=\"small\" content={btnContent} onClick={() => this.startSlotBooking(data.rowData)}></Button>;\r\n      }\r\n    } else {\r\n      return <Icon root=\"common\" name=\"badge-check\" size=\"medium\" />;\r\n    }\r\n  }\r\n\r\n  dateRender(data) {\r\n    if (data.rowData.SlotBooked) {\r\n      let startTime = dayjs(data.rowData.StartTime);\r\n      let endTime = dayjs(data.rowData.EndTime);\r\n      let terminalTimeZone = data.rowData.TimeZone;\r\n      let currentDate = new Date();\r\n      let currentTimeZone = currentDate.getTimezoneOffset() * -1;\r\n      let timeDifference = currentTimeZone - terminalTimeZone;\r\n      let currentStartTime = startTime.add(-1 * timeDifference, \"minutes\");\r\n      return <div>{currentStartTime.format(\"DD MMM YY\")}<br />{currentStartTime.format(\"HH:mm\")\r\n        + \" - \"\r\n        + endTime.add(-1 * timeDifference, \"minutes\").format(\"HH:mm\")}</div>;\r\n    } else {\r\n      let date = dayjs(data.rowData.Date);\r\n      return date.format(\"DD MMM YY\");\r\n    }\r\n  }\r\n\r\n  filterTransaction(value) {\r\n    this.setState({ filterKeyword: value });\r\n    let transList = lodash.cloneDeep(this.state.allTransactionList);\r\n    if (value != '') {\r\n      transList = transList.filter(t => t.Code.toUpperCase().indexOf(value.toUpperCase()) != -1);\r\n    }\r\n\r\n    this.setState({\r\n      transactionList: transList\r\n    });\r\n  }\r\n\r\n  startEditBooking() {\r\n    this.setState({\r\n      isSlotBooking: true\r\n    });\r\n\r\n    this.showModifyConfirmModal(false);\r\n  }\r\n\r\n  confirmEditBooking(compartment, isPastTime) {\r\n    try {\r\n      let compList = lodash.cloneDeep(this.state.compartmentList);\r\n      compList = this.props.isShipment ? compList.filter(c => c.ShipmentCode === compartment.ShipmentCode) :\r\n        compList.filter(c => c.ReceiptCode === compartment.ReceiptCode);\r\n\r\n      let transactionList = this.props.isShipment ? this.state.allTransactionList.filter(t => t.Code === compartment.ShipmentCode) :\r\n        this.state.allTransactionList.filter(t => t.Code === compartment.ReceiptCode);\r\n\r\n      let transaction = transactionList.length === 0 ? null : transactionList[0];\r\n\r\n      this.setState({\r\n        bookingTransaction: transaction,\r\n        bookingFPList: compList,\r\n        isEditBook: true\r\n      }, () => this.stopBayQueueInfoTimer());\r\n      if (isPastTime == false) {\r\n        this.showModifyConfirmModal(true);\r\n      }\r\n      else\r\n      {\r\n        this.setState({\r\n          isSlotBooking: true\r\n        });\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in confirmEditBooking:\", error);\r\n    }\r\n  }\r\n\r\n  startSlotBooking(transaction) {\r\n    this.getTransactionDetail(transaction, result => {\r\n      this.setState({\r\n        isSlotBooking: true,\r\n        bookingTransaction: transaction,\r\n        bookingFPList: this.props.isShipment ? result.EntityResult.ShipmentDetailsInfo : result.EntityResult.ReceiptCompartmentsInfo,\r\n        isEditBook: false\r\n      }, () => this.stopBayQueueInfoTimer());\r\n    });\r\n  }\r\n\r\n  getTransactionDetail(transaction, successCallback, failedCallback) {\r\n    const api = this.props.isShipment ? RestAPIs.GetShipment : RestAPIs.GetReceipt;\r\n    axios(api, Utilities.getAuthenticationObjectforPost(this.packCompartmentParam(transaction), this.props.tokenDetails.tokenInfo)).then((response) => {\r\n      let result = response.data;\r\n      if (result.IsSuccess === true) {\r\n        successCallback(result);\r\n      } else {\r\n        if (failedCallback !== undefined && failedCallback !== null) {\r\n          failedCallback(result);\r\n        }\r\n        this.failed(result.ErrorList[0]);\r\n      }\r\n    }).catch((error) => {\r\n      this.failed(\"error\");\r\n      console.log(\"Error while getTransactionDetail:\", error, transaction.Code);\r\n    });\r\n  }\r\n\r\n  endSlotBooking() {\r\n    this.setState({\r\n      isSlotBooking: false,\r\n      expandedRows: []\r\n    }, () => {\r\n      this.getTransactionList();\r\n      this.startBayQueueInfoTimer();\r\n    });\r\n  }\r\n\r\n  showModifyConfirmModal(flag) {\r\n    this.setState({\r\n      modifyModalOpen: flag\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <TranslationConsumer>\r\n          {(t) => (\r\n            <div>\r\n              {this.state.isSlotBooking ? (\r\n                <RoadSlotBookComposite isShipment={this.props.isShipment} transaction={this.state.bookingTransaction} slotConfigutationList={this.state.slotConfigurations}\r\n                  productList={this.state.bookingFPList} isEditBook={this.state.isEditBook}\r\n                  handleBackClick={() => this.endSlotBooking()} operationsVisibilty={this.state.operationsVisibilty}></RoadSlotBookComposite>\r\n              ) : \"\"}\r\n\r\n              {this.state.isSlotBooking ? \"\" :\r\n                (\r\n                  <div>\r\n                    <div className=\"ui breadcrumb pl-1 mobile-bread-crumb mobile-align-items-start\">\r\n                      <div className=\"section mt-sm-2 mt-lg-0\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={this.props.backToHomePage}>\r\n                        <Icon root=\"common\" name=\"caret-left\" className=\"caretLeft\"></Icon>\r\n                      </div>\r\n                      <div className=\"section pl-1 mt-sm-2 mt-lg-0\">\r\n                        <span>\r\n                          {this.props.isShipment ? t(\"SHIPMENT_SUMMARY\") : t(\"RECEIPT_SUMMARY\")}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div id=\"content\" className=\"mobile-padding-0-30 mobile-margin-top-30\">\r\n                      {this.state.driverBayQueueInfo === null ? \"\" : (\r\n                        <div className=\"row\">\r\n                          <div className=\"mobile-half-width-card mobile-half-width-card-borderRight mobile-left-card-radius\">\r\n                            <div className=\"mobile-bay-queueinfo-baycode\">\r\n                              {this.state.driverBayQueueInfo.BayCode}\r\n                            </div>\r\n                            <div className=\"mobile-bay-queueinfo-transactioncode\">\r\n                              {this.state.driverBayQueueInfo.TransactionCode}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"mobile-half-width-card mobile-right-card-radius\">\r\n                            <div className=\"mobile-bay-queueinfo-queuenumber\">\r\n                              {t(\"COMMON_QUEUE\")} - {this.state.driverBayQueueInfo.QueueNumber}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"mobile-find-your-transaction\">\r\n                        <span>{this.props.isShipment ? t(\"FIND_YOUR_SHIPMENT\") : t(\"FIND_YOUR_RECEIPT\")}</span>\r\n                      </div>\r\n                      <div>\r\n                        <Input style={{ border: \"none\" }} className=\"input-example mobile-input\" placeholder={this.props.isShipment ? t(\"COMMON_ENTER_SHIPMENT_CODE\") : t(\"COMMON_ENTER_RECEIPT_CODE\")}\r\n                          icon={<Icon name=\"search\" root=\"common\" size=\"small\" />} value={this.state.filterKeyword} onChange={this.filterTransaction} fluid={true} />\r\n                      </div>\r\n                      <div className=\"mobile-pending-transaction-text\">\r\n                        <span>{this.props.isShipment ? t(\"kpi_dashboardPendingShip\") : t(\"kpi_dashboardPendingReceipts\")}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mobile-pending-transaction-datatable\">\r\n                      <DataTable data={this.state.transactionList} search={false} globalFilterValue=\"\" selection={this.state.bookedTransactionList}\r\n                        searchPlaceholder={this.props.isShipment ? t(\"COMMON_ENTER_SHIPMENT_CODE\") : t(\"COMMON_ENTER_RECEIPT_CODE\")}\r\n                        expandedRows={this.state.expandedRows} rowExpansionTemplate={data => this.rowExpansionTemplate(data, t(\"Booked_Terminal\"))} selectionMode=\"multiple\"\r\n                        onSelectionChange={this.selectionChanged} id=\"transactionTable\">\r\n                        <DataTable.Column header={t(\"Common_Code\")} field=\"Code\" className=\"header-transaction-code\" />\r\n                        <DataTable.Column header={t(\"COMMON_SLOT\")} renderer={d => this.slotRender(d, t(\"SlotBook_Book\"))} className=\"text-align-center\" />\r\n                        <DataTable.Column header={t(\"Rpt_Date\")} renderer={this.dateRender} />\r\n                        <DataTable.Column header={t(\"Common_Terminal\")} renderer={this.terminalRender} />\r\n                      </DataTable>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              <CommonConfirmModal isOpen={this.state.modifyModalOpen} confirmMessage=\"BOOKING_MODIFY_CONFIRM\"\r\n                handleNo={() => this.showModifyConfirmModal(false)} handleYes={() => this.startEditBooking()}></CommonConfirmModal>\r\n              <CommonMessageModal isSuccess={this.state.tipSuccess} isOpen={this.state.showTipModal} message={this.state.tipMessage}\r\n                handleClose={() => { this.setState({ showTipModal: false }) }}></CommonMessageModal>\r\n            </div>\r\n          )}\r\n        </TranslationConsumer>\r\n      </ErrorBoundary >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.getUserDetails.userDetails,\r\n    tokenDetails: state.getUserDetails.TokenAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RoadSummaryComposite);\r\n\r\nRoadSlotBookComposite.propTypes = {\r\n  isShipment: PropTypes.bool.isRequired,\r\n  backToHomePage: PropTypes.func\r\n};","import React from 'react';\r\nimport { Icon, Modal, Button } from '@scuf/common';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorBoundary from '../../ErrorBoundary';\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport \"../../../CSS/styles.css\"\r\n\r\nconst CommonConfirmModal = (props) => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div id=\"confirmModal\">\r\n            <Modal open={props.isOpen} size=\"large\">\r\n              <Modal.Content>\r\n                <div style={{ textAlign: \"center\", fontSize: \"20px\" }}>\r\n                  <div>\r\n                    <b>{t(props.confirmMessage)}</b>\r\n                  </div>\r\n                  <div style={{ marginTop: \"50px\" }}>\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      content={t(\"COMMON_NO\")}\r\n                      onClick={() => props.handleNo()}\r\n                    />\r\n                    <Button\r\n                      type=\"primary\"\r\n                      content={t(\"COMMON_YES\")}\r\n                      onClick={() => props.handleYes()}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Modal.Content>\r\n            </Modal>\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    </ErrorBoundary >\r\n  )\r\n}\r\n\r\nCommonConfirmModal.propTypes = {\r\n  confirmMessage: PropTypes.string,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  handleYes: PropTypes.func,\r\n  handleNo: PropTypes.func\r\n}\r\n\r\nCommonConfirmModal.defaultProps = {\r\n  isOpen: false\r\n}\r\n\r\nexport default CommonConfirmModal;","import React from 'react';\r\nimport { Icon, Modal, Button } from '@scuf/common';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorBoundary from '../../ErrorBoundary';\r\nimport { TranslationConsumer } from \"@scuf/localization\";\r\nimport \"../../../CSS/styles.css\"\r\n\r\nconst CommonMessageModal = (props) => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <TranslationConsumer>\r\n        {(t) => (\r\n          <div>\r\n            {props.isSuccess ? (\r\n              <div id=\"successModal\">\r\n                <Modal open={props.isOpen} size=\"large\">\r\n                  <Modal.Content>\r\n                    <div style={{ textAlign: \"center\", fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n                      <div style={{ marginBottom: \"20px\" }}>\r\n                        <Icon className=\"font-color-success\" root=\"common\" name=\"badge-check\" size=\"medium\" />\r\n                      </div>\r\n                      <div>\r\n                        {t(props.message)}\r\n                      </div>\r\n                      <div style={{ marginTop: \"50px\" }}>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          content={t(\"COMMON_CLOSE\")}\r\n                          onClick={() => props.handleClose()}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Modal.Content>\r\n                </Modal>\r\n              </div>\r\n            ) : \"\"}\r\n\r\n            {props.isSuccess ? \"\" : (\r\n              <div id=\"failedModal\">\r\n                <Modal open={props.isOpen} size=\"large\">\r\n                  <Modal.Content>\r\n                    <div style={{ textAlign: \"center\", fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n                      <div style={{ marginBottom: \"20px\" }}>\r\n                        <Icon className=\"font-color-failed\" root=\"common\" name=\"badge-warning\" size=\"medium\" />\r\n                      </div>\r\n                      <div>\r\n                        {t(props.message)}\r\n                      </div>\r\n                      <div style={{ marginTop: \"50px\" }}>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          content={t(\"COMMON_CLOSE\")}\r\n                          onClick={() => props.handleClose()}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Modal.Content>\r\n                </Modal>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </TranslationConsumer>\r\n    </ErrorBoundary >\r\n  )\r\n}\r\n\r\nCommonMessageModal.propTypes = {\r\n  isSuccess: PropTypes.bool.isRequired,\r\n  message: PropTypes.string,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func\r\n}\r\n\r\nCommonMessageModal.defaultProps = {\r\n  isOpen: false,\r\n  isSuccess: true\r\n}\r\n\r\nexport default CommonMessageModal;","export const functionGroups = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  modify: \"modify\",\r\n  remove: \"remove\",\r\n};\r\nexport const fnCarrierCompany = \"carriercompany\";\r\nexport const fnDriver = \"driver\";\r\nexport const fnCustomer = \"customer\";\r\nexport const fnTrailer = \"trailer\";\r\nexport const fnOriginTerminal = \"originterminal\";\r\nexport const fnDestination = \"destination\";\r\nexport const fnPrimeMover = \"primemover\";\r\nexport const fnVehicle = \"vehicle\";\r\nexport const fnSBC = \"shipmentbycompartment\";\r\nexport const fnSBP = \"shipmentbyproduct\";\r\nexport const fnShipmentStatus = \"ViewShipmentStatus\";\r\nexport const fnVessel = \"vessel\";\r\nexport const fnOrder = \"order\";\r\nexport const fnOrderForceClose = \"OrderForceClose\";\r\n\r\nexport const fnContract = \"contract\";\r\nexport const fnTruckReceipt = \"receiptplanbycompartment\";\r\nexport const fnMarineDispatch = \"ViewMarineShipment\";\r\nexport const fnMarineShipmentByCompartment = \"MarineShipmentByCompartment\";\r\nexport const fnMarineReceipt = \"ViewMarineReceipt\";\r\nexport const fnSupplier = \"supplier\";\r\nexport const fnFinishedProduct = \"finishedproduct\";\r\nexport const fnRailDispatch = \"RailDispatch\";\r\nexport const fnRailReceipt = \"RailReceipt\";\r\nexport const fnRailRoute = \"RailRoute\";\r\nexport const fnRailWagon = \"RailWagon\"\r\n\r\nexport const fnCloseRailDispatch = \"CloseRailDispatch\";\r\nexport const fnPrintRailBOL = \"PrintRailBOL\";\r\nexport const fnPrintRailFAN = \"PrintRailFAN\";\r\nexport const fnRailDispatchLoadSpotAssignment = \"RailDispatchLoadSpotAssignment\";\r\nexport const fnRailDispatchProductAssignment = \"RailDispatchProductAssignment\";\r\nexport const fnViewRailDispatch = \"ViewRailDispatch\"\r\nexport const fnViewRailLoadingDetails = \"ViewRailLoadingDetails\"\r\n\r\nexport const fnCloseRailReceipt = \"CloseRailReceipt\";\r\nexport const fnPrintRailBOD = \"PrintRailBOD\";\r\nexport const fnPrintRailRAN = \"PrintRailRAN\";\r\nexport const fnViewRailReceipt = \"ViewRailReceipt\"\r\nexport const fnViewRailUnLoadingDetails = \"ViewRailUnLoadingDetails\"\r\n\r\nexport const fnSMSConfiguration = \"SMS\";\r\nexport const fnUnAccountedTransactionTank = \"UnAccountedTransactionTank\"\r\nexport const fnUnAccountedTransactionMeter = \"UnAccountedTransactionMeter\"\r\nexport const fnPipelineDispatch = \"PipelineDispatch\";\r\nexport const fnPipelineReceipt = \"PipelineReceipt\";\r\n\r\nexport const fnPipelineDispatchManualEntry = \"PipelineDispatchManualEntry\";\r\nexport const fnPipelineReceiptManualEntry = \"PipelineReceiptManualEntry\";\r\n\r\nexport const fnLookUpData = \"LookUpData\";\r\n\r\n\r\n\r\nexport const fnHSEInspection = \"HSEInspection\";\r\nexport const fnHSEConfiguration = \"HSEInspectionConfig\"\r\n\r\nexport const fnEmailConfiguration = \"Email\";\r\nexport const fnShareholder = \"Shareholder\";\r\nexport const fnLocation = \"LocationConfig\";\r\nexport const fnDevice = \"DeviceConfig\";\r\nexport const fnBaseProduct = \"baseproduct\";\r\nexport const fnSiteView = \"SiteView\";\r\nexport const fnLeakageManualEntry = \"LeakageManualEntry\";\r\nexport const fnTerminal = \"Terminal\";\r\nexport const fnSlotInformation = \"SlotInformation\";\r\nexport const fnTankGroup = \"TankGroup\";\r\nexport const fnTank = \"Tank\";\r\nexport const fnSealMaster = \"SealMaster\"\r\nexport const fnTankEODEntry = \"TankEODEntry\";\r\nexport const fnUnmatchedLocalTransactions = \"UnmatchedLocalTransactions\";\r\nexport const fnAccessCard = \"AccessCard\";\r\nexport const fnResetPin = \"ResetPin\";\r\nexport const fnSlotConfiguration = \"SlotConfiguration\";\r\nexport const fnUOM = \"UOM\";\r\nexport const fnPrintMarineFAN = \"PrintMarineFAN\";\r\nexport const fnPrintMarineBOL = \"PrintMarineBOL\";\r\nexport const fnViewMarineLoadingDetails = \"ViewMarineLoadingDetails\";\r\nexport const fnViewMarineShipmentAuditTrail = \"ViewMarineShipmentAuditTrail\";\r\nexport const fnCloseMarineShipment = \"CloseMarineShipment\";\r\nexport const fnIssueCard = \"IssueCard\";\r\nexport const fnActivateCard = \"ActivateCard\";\r\nexport const fnRevokeCard = \"RevokeCard\";\r\nexport const fnAutoIDAssociation = \"AutoIDAssociation\";\r\nexport const fnMarineReceiptByCompartment = \"MarineReceiptByCompartment\";\r\nexport const fnPrintMarineRAN = \"PrintMarineRAN\";\r\nexport const fnPrintMarineBOD = \"PrintMarineBOD\";\r\nexport const fnViewMarineUnloadingDetails = \"ViewMarineUnloadingDetails\";\r\nexport const fnViewMarineReceiptAuditTrail = \"ViewMarineReceiptAuditTrail\";\r\n\r\nexport const fnCloseMarineReceipt = \"CloseMarineReceipt\";\r\nexport const fnWeekendConfig = \"WeekendConfig\";\r\nexport const fnEODAdmin = \"EODAdmin\";\r\nexport const fnPrintBOL = \"PrintBOL\";\r\nexport const fnPrintFAN = \"PrintFAN\";\r\nexport const fnPrintBOD = \"PrintBOD\";\r\nexport const fnCloseShipment = \"CloseShipment\";\r\nexport const fnCloseReceipt = \"CloseReceipt\";\r\nexport const fnContractForceClose = \"CONTRACTFORCECLOSE\";\r\nexport const fnCaptain = \"Captain\";\r\nexport const fnOverrideShipmentSeq = \"OverrideShipmentSequence\";\r\nexport const fnKPIInformation = \"KPIInformation\";\r\n\r\nexport const fnLanguage = \"Language\";\r\nexport const fnWebPortalUserMap = \"WebPortalUserMap\";\r\nexport const fnBayGroup = \"BayGroup\";\r\nexport const fnPipelineHeaderSiteView = \"PipelineHeaderSiteView\";\r\n\r\nexport const fnExchangePartner = \"ExchangePartner\";\r\nexport const fnTankMonitor = \"TankMonitor\";\r\nexport const fnUser = \"PersonAdmin\";\r\nexport const fnProductReconciliationReports = \"ProductReconciliationReports\";\r\n\r\nexport const fnReportConfiguration = \"ReportConfiguration\";\r\nexport const fnProcessConfiguration = \"EXECONFIGURATION\";\r\n\r\nexport const fnShareholderAllocation = \"ShareholderAllocation\";\r\nexport const fnNotificationGroup = \"NotificationGroup\";\r\nexport const fnNotificationRestriction = \"NotificationRestriction\";\r\nexport const fnNotificationConfig = \"NotificationConfig\";\r\n\r\n\r\n\r\nexport const fn_WEIGHBRIDGEMANUALENTRY = \"WEIGHBRIDGEMANUALENTRY\";\r\nexport const fnAllowWeighBridgeManualEntry = \"AllowWeighBridgeManualEntry\";\r\n\r\n\r\nexport const fnProductAllocation = \"ProductAllocation\";\r\nexport const fnMasterDeviceConfiguration = \"MasterDeviceConfiguration\";\r\nexport const fnShareholderAgreement = \"ShareholderAgreement\";\r\nexport const fnTankShareholderPrimeFunction = \"TANKSHAREHOLDERPRIMEFUNCTION\";\r\nexport const fnRoleAdmin = \"ROLEADMIN\";\r\nexport const fnShiftConfig = \"ShiftConfig\";\r\nexport const fnPrinterConfiguration = \"PrinterConfiguration\";\r\nexport const fnCustomerAgreement = \"CustomerAgreement\";\r\nexport const fnbaySCADAConfiguration = \"BaySCADAConfiguration\";\r\nexport const fnRailReceiptUnloadSpotAssignment =\r\n  \"RailReceiptUnloadSpotAssignment\";\r\nexport const fnStaffVisitor = \"STAFF_VISITOR\";\r\nexport const fnPipelineMeterSiteView = \"PipelineMeterSiteView\";\r\nexport const fnRailSiteView = \"RailSiteView\";\r\nexport const fnMarineSiteView = \"MarineSiteView\";\r\nexport const fnLoadingDetails = \"LoadingDetails\";\r\nexport const fnUnloadingDetails = \"UnloadingDetails\";\r\n\r\n\r\n\r\nexport const fnRoadHSEInspection = \"RoadHSEInspection\";\r\nexport const fnRoadHSEConfiguration = \"RoadHSEInspectionConfig\";\r\n\r\nexport const fnMarineHSEInspection = \"MarineHSEInspection\";\r\nexport const fnMarineHSEConfiguration = \"MarineHSEInspectionConfig\";\r\n\r\nexport const fnRailHSEInspection = \"RailHSEInspection\";\r\nexport const fnRailHSEConfiguration = \"RailHSEInspectionConfig\";\r\n\r\nexport const fnPipelineHSEInspection = \"PipelineHSEInspection\";\r\nexport const fnPipelineHSEConfiguration = \"PipelineHSEInspectionConfig\";\r\nexport const fnPrintRAN = \"PrintRAN\";\r\nexport const fnViewReceiptStatus = \"ViewReceiptStatus\";\r\nexport const fnViewReceiptAuditTrail = \"ViewReceiptAuditTrail\";\r\nexport const fnCustomerRecipe = \"customerrecipe\";\r\n\r\nexport const fnCOAParameter = \"COAParameter\";\r\nexport const fnCOATemplate = \"COATemplate\";\r\nexport const fnCOAManagement = \"COAManagement\";\r\nexport const fnCOAManagementFinishedProduct = \"COAManagementFinishedProduct\";\r\nexport const fnCOACustomer = \"COACustomer\";\r\nexport const fnCOAAssignment = \"COAAssignment\";\r\n\r\nexport const fnShipmentDriver = \"ShipmentDriver\";\r\nexport const fnReceiptDriver = \"ReceiptDriver\";\r\n\r\nexport const fnProductForecastConfiguration = \"ProductForecastConfiguration\";","export const carrierCode = \"CarrierCode\";\r\nexport const transportationType = \"TransportationType\";\r\nexport const shareholderCode = \"ShareHolderCode\";\r\nexport const driverCode = \"DriverCode\";\r\nexport const customerCode = \"CustomerCode\";\r\nexport const trailerCode = \"TrailerCode\";\r\nexport const originTerminalCode = \"OriginTerminalCode\";\r\nexport const primeMoverCode = \"PrimeMoverCode\";\r\nexport const vehicleCode = \"VehicleCode\";\r\nexport const destinationCode = \"DestinationCode\";\r\nexport const finishedProductCode = \"FinishedProductCode\";\r\nexport const shipmentCode = \"ShipmentCode\";\r\nexport const orderCode = \"OrderCode\";\r\nexport const receiptCode = \"ReceiptCode\";\r\nexport const suppliercode = \"SupplierCode\";\r\nexport const marineDispatchCode = \"MarineDispatchCode\";\r\nexport const marineReceiptCode = \"MarineReceiptCode\";\r\nexport const supplierCode = \"SupplierCode\";\r\nexport const contractCode = \"ContractCode\";\r\n\r\nexport const railDispatchCode = \"RailDispatchCode\";\r\nexport const railReceiptCode = \"RailReceiptCode\";\r\nexport const railRouteCode = \"RailRouteCode\";\r\nexport const wagonCode = \"WagonCode\";\r\n\r\nexport const compartmentCode = \"CompartmentCode\";\r\n\r\nexport const smsConfigurationCode = \"SMSConfigurationCode\";\r\nexport const pipelineDispatchCode = \"PipelineDispatchCode\";\r\nexport const pipelineReceiptCode = \"PipelineReceiptCode\";\r\nexport const EmailConfigurationCode = \"EmailConfigurationCode\";\r\n\r\nexport const baseProductCode = \"BaseProductCode\";\r\nexport const locationCode = \"LocationCode\";\r\nexport const gantryCode = \"GantryCode\";\r\n\r\nexport const siteViewType = \"SiteViewType\";\r\n\r\nexport const entityCode = \"EntityCode\";\r\n\r\nexport const entityType = \"EntityType\";\r\nexport const cardReaderCode = \"CardReaderCode\";\r\nexport const accessCardCode = \"AccessCardCode\";\r\nexport const bcuCode = \"BcuCode\";\r\nexport const deuCode = \"DeuCode\";\r\nexport const weighBridgeCode = \"WeighBridgeCode\";\r\nexport const weight = \"Weight\";\r\nexport const outOfToleranceAllowed = \"OutOfToleranceAllowed\";\r\n\r\nexport const loadingArmCode = \"LoadingArmCode\";\r\nexport const transportaionType = \"TransportationType\";\r\nexport const bayCode = \"BayCode\";\r\nexport const TransactionNumber = \"TransactionNumber\";\r\nexport const BatchNumber = \"BatchNumber\";\r\nexport const terminalCode = \"TerminalCode\";\r\nexport const tankGroupCode = \"TankGroupCode\";\r\nexport const tankCode = \"TankCode\";\r\nexport const meterCode = \"MeterCode\";\r\n\r\nexport const shipmentType = \"ShipmentType\";\r\nexport const shipmentStatus = \"ShipmentStatus\";\r\nexport const meterLineType = \"MeterLineType\";\r\nexport const dispatchCode = \"DispatchCode\";\r\nexport const railReceiptStatus = \"RailReceiptStatus\";\r\nexport const receiptStatus = \"ReceiptStatus\";\r\nexport const fptTansactionID = \"FPTransactionID\";\r\nexport const productCategoryType = \"ProductCategoryType\";\r\nexport const marineReason = \"Reason\";\r\n\r\nexport const sealMasterCode = \"SealMasterCode\";\r\nexport const marineDispatchReason = \"Reason\";\r\nexport const OperationName = \"OperationName\";\r\nexport const FPTransactionID = \"FPTransactionID\";\r\nexport const ProductCategoryType = \"ProductCategoryType\";\r\nexport const compartmentSeqNoInVehicle = \"CompartmentSeqNoInVehicle\";\r\nexport const adjustedPlanQuantity = \"AdjustedPlanQuantity\";\r\nexport const forceComplete = \"ForceComplete\";\r\nexport const dispatchStatus = \"DispatchStatus\";\r\nexport const HolidayDate = \"HolidayDate\";\r\nexport const ActionID = \"ActionID\";\r\nexport const EODTimePrev = \"EODTimePrev\";\r\nexport const TerminalAction = \"TerminalAction\";\r\nexport const EODTime = \"EODTime\";\r\nexport const MonthStartDay = \"MonthStartDay\";\r\nexport const captainCode = \"CaptainCode\";\r\nexport const userType = \"GeneralTMUserType\";\r\nexport const generalTMUserCode = \"GeneralTMUserCode\";\r\nexport const isPriority = \"IsPriority\";\r\nexport const actualTerminalCode = \"ActualTerminalCode\";\r\nexport const shipmentBondNo = \"ShipmentBondNo\"\r\nexport const receiptBondNo = \"ReceiptBondNo\"\r\nexport const marineReceiptStatus = \"MarineReceiptStatus\";\r\nexport const deviceType = \"DeviceType\";\r\nexport const deviceCode = \"DeviceCode\";\r\nexport const bayGroup = \"BayGroup\";\r\nexport const pipelineHeaderCode = \"PipelineHeaderCode\";\r\nexport const exchangePartnerName = \"ExchangePartner\";\r\nexport const personID = \"PersonID\";\r\nexport const userName = \"UserName\";\r\nexport const pipelinePlanCode = \"PipelinePlanCode\";\r\nexport const pipelinePlanType = \"PipelinePlanType\";\r\nexport const channelCode = \"ChannelCode\";\r\nexport const ProcessName = \"ProcessName\";\r\nexport const reconciliationCode = \"ReconciliationCode\";\r\nexport const NotificationGroupCode = \"NotificationGroupCode\";\r\nexport const NotificationGroupStatus = \"NotificationGroupStatus\";\r\nexport const NotificationGroupDesc = \"NotificationGroupDesc\";\r\nexport const NotificationResSource = \"NotificationResSource\";\r\nexport const NotificationResMsgCode = \"NotificationResMsgCode\";\r\nexport const NotificationOrigResSource = \"NotificationOrigResSource\";\r\nexport const NotificationOrigResMsgCode = \"NotificationOrigResMsgCode\";\r\nexport const NotificationMessageCode = \"NotificationMessageCode\"\r\nexport const positionType = \"PositionType\";\r\nexport const roleName = \"RoleName\";\r\nexport const exchangeAgreementCode = \"ExchangeAgreementCode\";\r\nexport const ProductTransferAgreementCode = \"ProductTransferAgreementCode\";\r\nexport const ShareholderAgreementStatus = \"ShareholderAgreementStatus\";\r\nexport const RequestorShareholder = \"RequestorShareholder\";\r\nexport const LenderShareholder = \"LenderShareholder\";\r\nexport const requestCode = \"RequestCode\";\r\nexport const TransferReferenceCode = \"TransferReferenceCode\";\r\nexport const ShiftID = \"ShiftID\";\r\nexport const ShiftName = \"ShiftName\";\r\nexport const printerName = \"PrinterName\";\r\nexport const locationtype = \"LocationType\";\r\nexport const forceClosureReason = \"ForceClosureReason\";\r\nexport const TransactionType = \"TransactionType\";\r\nexport const CustomerRecipeCode = \"CustomerRecipeCode\";\r\n\r\nexport const coaTemplateCode = \"COATemplateCode\";\r\nexport const coaManagementCode = \"COAManagementCode\";\r\nexport const coaParameterCode = \"COAParameterCode\";\r\nexport const coaManagementFinishedProductCode = \"COAManagementFinishedProductCode\";\r\nexport const coaCustomerCode = \"COACustomerCode\";\r\nexport const coaFinishedProductCode = \"COAFinishedProductCode\";\r\nexport const coaAssignmentCode = \"COAAssignmentCode\";\r\nexport const coaTransportationType = \"COATransportationType\";\r\nexport const coaTransactionType = \"COATransactionType\";\r\nexport const coaSeqNumber = \"COASeqNumber\";\r\nexport const forecastDate = \"ForecastDate\";\r\nexport const forecastTanks = \"ForecastTanks\";"],"names":["BookSlotComposite","Component","constructor","props","super","state","timeSpan","time","isBooked","componentDidMount","startTime","this","slotTime","startLTTime","format","endLTTime","setState","booked","error","console","log","render","_jsx","ErrorBoundary","children","TranslationConsumer","t","_jsxs","className","operationsVisibilty","add","Button","type","size","content","onClick","handleSlotBook","isCanCancel","handleCancelBook","Icon","root","name","connect","userDetails","getUserDetails","tokenDetails","TokenAuth","CommonLoadingModal","id","Modal","open","isOpen","Content","style","textAlign","fontSize","minHeight","Loader","text","loadingMessage","defaultProps","BaySlotComposite","selectedSlot","slots","tempSlotInfo","showCancelModal","showUpdateModal","isRefreshing","showTipModal","tipSuccess","tipMessage","generateSlots","componentDidUpdate","el","window","document","getElementById","locationCode","bookedSlot","slotTimeList","find","s","postion","filter","isVisible","indexOf","scrollLeft","success","msg","showMessage","failed","isShowTip","isSuccess","message","getBookSlotParam","startCurrentTime","endTime","endCurrentTime","Remarks","TransactionType","isShipment","TransactionCode","transaction","Code","Status","Constants","BOOKED","StartTime","EndTime","LocationCode","ShareholderCode","TerminalCode","selectedTerminal","Key","TransportationType","ROAD","Attributes","getCancelBookParam","timeDifference","Date","getTimezoneOffset","TimeZone","dayjs","toDate","ReferenceNumber","map","isCanCancelBook","bookSlot","cancelBook","terminalZone","cancel","slotParams","slotParameters","minTimeForBook","minSlotMinutesToBook","isBefore","SlotBooked","updateBookSlot","createBookSlot","obj","ShareHolderCode","keyDataCode","KeyCodes","Entity","axios","RestAPIs","Utilities","tokenInfo","then","response","result","data","IsSuccess","refreshSlotState","EntityResult","ErrorList","catch","showUpdateConfirmModal","confirmUpdateBook","lodash","flag","showCancelConfirmModal","confirmCancelBook","notSupportProducts","productList","p","bayFPList","bfp","FinishedProductCode","length","push","marginBottom","display","marginRight","bayFPStr","fp","Tooltip","element","position","event","hoverable","CommonConfirmModal","confirmMessage","handleNo","handleYes","CommonMessageModal","handleClose","RoadSlotBookComposite","terminalList","bayList","Value","selectedDate","slotConfigurations","slotConfigutationList","slotStartTime","slotEndTime","slotDuration","maxSlotDaysToBook","minSlotChangeMinutes","maxSlots","refreshTime","terminalCode","baySlotList","bookedSlotList","handleTerminalChange","filteredTerminals","selectedSlotConfigurations","sc","SlotParams","getBaysforTerminal","handleDateChange","duration","setSlotParam","getTerminalList","bind","Array","isArray","filterTerminalList","fiterTerminalList","tmpSelectedTerminal","BookedTerminal","undefined","setDefaultSelectDate","timeZone","isEditBook","set","newTerminalList","plannedTerminalList","PlannedTerminal","split","resultList","b","BayType","forEach","bay","bayItem","bayCode","BayCode","active","Active","bayType","shareholder","SupportedProducts","product","shareholderArray","sh","shCode","Shareholdercode","fpCodes","getTerminalDropdownOptions","list","a","getBookedSlotList","slotRequestInfo","TransactionSource","SHIPMENT","RECEIPT","FromDate","ToDate","tmpBookedSlotList","setBaySlotList","isSelectedDateOutofRange","ltCurrentTime","diff","isProductCompatibleWithBay","fpList","i","getBaySupportProductList","baySHList","terminalTimeZone","selectedConfig","maxNoOfSlots","operationalParams","sp","Name","tempSlotStartTime","tmpSlNo","tempSlotEndTime","slNo","handleSlotTimeList","BookedBay","bookedStartTime","bookedEndTime","tmpStartTime","tmpEndTime","tmpContinuousSlots","tmpStartSlot","tmpEndSlot","sort","s1","s2","isCompatible","isSlotVisible","height","isBayCompatible","bayInfo","actionType","terminalOptions","cursor","handleBackClick","Select","placeholder","value","options","fluid","onChange","disabled","justifyContent","exactSize","RoadSummaryComposite","transactionList","allTransactionList","compartmentList","expandedRows","bookedTransactionList","driverBayQueueInfo","isSlotBooking","bookingTransaction","bookingFPList","modifyModalOpen","filterKeyword","modify","terminalRender","toggleExpand","rowExpansionTemplate","editRender","filterTransaction","dateRender","slotRender","initAccessLevel","getTransactionList","getBayQueueInfoForUser","startBayQueueInfoTimer","componentWillUnmount","stopBayQueueInfoTimer","FunctionsList","functionGroups","fnSlotInformation","remove","json","transList","handleTransactionList","getSlotConfigurations","parseInt","bayQueueInfoRefreshInterval","bayQueueInfoTimer","setInterval","clearInterval","Table","newTransList","newTrans","packCompartmentParam","keyCode","key","getCompartmentsInfo","compartList","c","ShipmentCode","ReceiptCode","getTransactionDetail","ShipmentDetailsInfo","item","ReceiptCompartmentsInfo","rowData","includes","terminalTitle","compartmentData","DataTable","showHeader","selectionMode","Column","field","renderer","quantityRender","expanded","bookedList","index","findIndex","JSON","stringify","splice","nodeList","querySelector","querySelectorAll","call","innerHTML","classList","compList","CompartmentCode","isPastTime","isPastTimeForBookSlot","confirmEditBooking","currentTime","Quantity","QuantityUOM","btnContent","startSlotBooking","currentStartTime","toUpperCase","startEditBooking","showModifyConfirmModal","compartment","successCallback","failedCallback","api","endSlotBooking","backToHomePage","QueueNumber","Input","border","icon","search","globalFilterValue","selection","searchPlaceholder","onSelectionChange","selectionChanged","header","d","propTypes","PropTypes","isRequired","marginTop","fontWeight","view","fnCarrierCompany","fnDriver","fnCustomer","fnTrailer","fnOriginTerminal","fnDestination","fnPrimeMover","fnVehicle","fnSBC","fnSBP","fnShipmentStatus","fnVessel","fnOrder","fnOrderForceClose","fnContract","fnTruckReceipt","fnMarineDispatch","fnMarineShipmentByCompartment","fnMarineReceipt","fnSupplier","fnFinishedProduct","fnRailDispatch","fnRailReceipt","fnRailRoute","fnRailWagon","fnCloseRailDispatch","fnPrintRailBOL","fnPrintRailFAN","fnRailDispatchLoadSpotAssignment","fnRailDispatchProductAssignment","fnViewRailDispatch","fnViewRailLoadingDetails","fnCloseRailReceipt","fnPrintRailBOD","fnPrintRailRAN","fnViewRailReceipt","fnViewRailUnLoadingDetails","fnSMSConfiguration","fnUnAccountedTransactionTank","fnUnAccountedTransactionMeter","fnPipelineDispatch","fnPipelineReceipt","fnPipelineDispatchManualEntry","fnPipelineReceiptManualEntry","fnLookUpData","fnHSEInspection","fnHSEConfiguration","fnEmailConfiguration","fnShareholder","fnLocation","fnDevice","fnBaseProduct","fnSiteView","fnLeakageManualEntry","fnTerminal","fnTankGroup","fnTank","fnSealMaster","fnTankEODEntry","fnUnmatchedLocalTransactions","fnAccessCard","fnResetPin","fnSlotConfiguration","fnPrintMarineFAN","fnPrintMarineBOL","fnViewMarineLoadingDetails","fnViewMarineShipmentAuditTrail","fnCloseMarineShipment","fnIssueCard","fnActivateCard","fnRevokeCard","fnAutoIDAssociation","fnMarineReceiptByCompartment","fnPrintMarineRAN","fnPrintMarineBOD","fnViewMarineUnloadingDetails","fnViewMarineReceiptAuditTrail","fnCloseMarineReceipt","fnWeekendConfig","fnEODAdmin","fnPrintBOL","fnPrintFAN","fnPrintBOD","fnCloseShipment","fnCloseReceipt","fnContractForceClose","fnCaptain","fnOverrideShipmentSeq","fnKPIInformation","fnLanguage","fnWebPortalUserMap","fnBayGroup","fnPipelineHeaderSiteView","fnTankMonitor","fnUser","fnProductReconciliationReports","fnReportConfiguration","fnProcessConfiguration","fnShareholderAllocation","fnNotificationGroup","fnNotificationRestriction","fnNotificationConfig","fnAllowWeighBridgeManualEntry","fnProductAllocation","fnMasterDeviceConfiguration","fnShareholderAgreement","fnTankShareholderPrimeFunction","fnRoleAdmin","fnShiftConfig","fnPrinterConfiguration","fnCustomerAgreement","fnbaySCADAConfiguration","fnRailReceiptUnloadSpotAssignment","fnStaffVisitor","fnPipelineMeterSiteView","fnRailSiteView","fnMarineSiteView","fnLoadingDetails","fnUnloadingDetails","fnRoadHSEInspection","fnRoadHSEConfiguration","fnMarineHSEInspection","fnMarineHSEConfiguration","fnRailHSEInspection","fnRailHSEConfiguration","fnPipelineHSEInspection","fnPipelineHSEConfiguration","fnPrintRAN","fnViewReceiptStatus","fnCustomerRecipe","fnCOAParameter","fnCOATemplate","fnCOAManagement","fnCOACustomer","fnCOAAssignment","fnProductForecastConfiguration","carrierCode","transportationType","shareholderCode","driverCode","customerCode","trailerCode","originTerminalCode","primeMoverCode","vehicleCode","destinationCode","finishedProductCode","shipmentCode","orderCode","receiptCode","marineDispatchCode","marineReceiptCode","supplierCode","contractCode","railDispatchCode","railReceiptCode","railRouteCode","wagonCode","compartmentCode","smsConfigurationCode","pipelineDispatchCode","pipelineReceiptCode","EmailConfigurationCode","baseProductCode","siteViewType","entityCode","entityType","cardReaderCode","accessCardCode","bcuCode","deuCode","weighBridgeCode","weight","outOfToleranceAllowed","loadingArmCode","transportaionType","TransactionNumber","BatchNumber","tankGroupCode","tankCode","meterCode","shipmentType","shipmentStatus","meterLineType","dispatchCode","receiptStatus","fptTansactionID","productCategoryType","marineReason","sealMasterCode","marineDispatchReason","OperationName","FPTransactionID","ProductCategoryType","compartmentSeqNoInVehicle","adjustedPlanQuantity","forceComplete","dispatchStatus","HolidayDate","ActionID","EODTimePrev","TerminalAction","EODTime","MonthStartDay","captainCode","userType","generalTMUserCode","isPriority","actualTerminalCode","shipmentBondNo","receiptBondNo","deviceType","deviceCode","bayGroup","pipelineHeaderCode","exchangePartnerName","personID","userName","pipelinePlanCode","pipelinePlanType","channelCode","ProcessName","reconciliationCode","NotificationGroupCode","NotificationGroupStatus","NotificationGroupDesc","NotificationResSource","NotificationResMsgCode","NotificationOrigResSource","NotificationOrigResMsgCode","NotificationMessageCode","positionType","exchangeAgreementCode","ProductTransferAgreementCode","ShareholderAgreementStatus","RequestorShareholder","LenderShareholder","requestCode","TransferReferenceCode","ShiftID","ShiftName","printerName","locationtype","forceClosureReason","CustomerRecipeCode","coaTemplateCode","coaManagementCode","coaParameterCode","coaManagementFinishedProductCode","coaSeqNumber","forecastDate","forecastTanks"],"sourceRoot":""}